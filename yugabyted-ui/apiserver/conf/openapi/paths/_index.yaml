/public/accounts:
  get:
    description: Get account by name
    tags:
      - account
    summary: Get account by name
    operationId: getAccountByName
    parameters:
      - name: name
        in: query
        description: Filter accounts by name
        required: true
        style: form
        explode: false
        schema:
          type: string
          minLength: 1
    responses:
      '200':
        $ref: '../responses/_index.yaml#/AccountResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
  post:
    description: Create an account
    tags:
      - account
    summary: Create an account
    operationId: createAccount
    requestBody:
      $ref: '../request_bodies/_index.yaml#/AccountSpec'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/AccountResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/public/accounts/{accountId}':
  get:
    description: Get an account
    tags:
      - account
    summary: Get account info
    operationId: getAccount
    parameters:
      - name: accountId
        in: path
        description: ID of account to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    responses:
      '200':
        $ref: '../responses/_index.yaml#/AccountResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
  put:
    description: Modify account
    tags:
      - account
    summary: Modify account
    parameters:
      - name: accountId
        in: path
        description: ID of account to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    operationId: modifyAccount
    requestBody:
      $ref: '../request_bodies/_index.yaml#/AccountSpec'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/AccountResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
  delete:
    description: Delete an account
    tags:
      - account
    summary: Delete account
    operationId: deleteAccount
    parameters:
      - name: accountId
        in: path
        description: ID of account to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    responses:
      '200':
        description: Account successfully deleted
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/public/accounts/{accountId}/users':
  get:
    operationId: listUsers
    parameters:
      - name: accountId
        in: path
        description: ID of account associated to the user
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: email
        in: query
        description: Filter users by email
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: first_name
        in: query
        description: Filter users by first_name
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: last_name
        in: query
        description: Filter users by last_name
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: state
        in: query
        description: Filter users by state
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: order
        in: query
        description: Order of results
        required: false
        style: form
        explode: false
        schema:
          type: string
          default: asc
      - name: order_by
        in: query
        description: Sort results by attribute
        required: false
        style: form
        explode: false
        schema:
          type: string
          default: email
      - name: limit
        in: query
        description: Limit number of results returned per page
        required: false
        style: form
        explode: false
        schema:
          type: integer
          default: 25
          minimum: 1
          maximum: 100
      - name: continuation_token
        in: query
        description: Boundary before next page
        required: false
        style: form
        explode: false
        schema:
          type: string
    description: List users
    tags:
      - account
    summary: List users
    responses:
      '200':
        $ref: '../responses/_index.yaml#/UserListResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
  post:
    description: Invite user to signup for the account
    tags:
      - account
    summary: Add or Invite user to account
    operationId: inviteAccountUser
    parameters:
      - name: accountId
        in: path
        description: ID of account to invite user to
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    requestBody:
      $ref: '../request_bodies/_index.yaml#/InviteUserRequest'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/InviteUserResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/public/accounts/{accountId}/users/batch':
  post:
    description: Batch invite users to signup for the account
    tags:
      - account
    summary: Batch add or invite user to account
    operationId: batchInviteAccountUser
    parameters:
      - name: accountId
        in: path
        description: ID of account to invite users to
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    requestBody:
      $ref: '../request_bodies/_index.yaml#/BatchInviteUserRequest'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/BatchInviteUserResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/public/accounts/{accountId}/users/{userId}':
  get:
    description: Get a user
    tags:
      - account
    summary: Get user info
    operationId: getAccountUser
    parameters:
      - name: accountId
        in: path
        description: ID of the associated account
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: userId
        in: path
        description: Email of the user to get the account info
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    responses:
      '200':
        $ref: '../responses/_index.yaml#/UserResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
  delete:
    description: Remove user from account
    tags:
      - account
    summary: Remove user from account
    operationId: removeAccountUser
    parameters:
      - name: accountId
        in: path
        description: ID of account of the project
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: userId
        in: path
        description: ID of the user to get the account info
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    responses:
      '200':
        description: User successfully deleted
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/public/accounts/{accountId}/users/{userId}/roles':
  put:
    description: Modify user role
    tags:
      - account
    summary: Modify user role
    operationId: modifyUserRole
    parameters:
      - name: accountId
        in: path
        description: ID of associated account
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: userId
        in: path
        description: ID of associated user
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    requestBody:
      $ref: '../request_bodies/_index.yaml#/ModifyUserRoleRequest'
    responses:
      '200':
        description: Successfully modified user role
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/public/accounts/{accountId}/allowed_login_types:
  get:
    description: Get allowed login types for account
    tags:
      - account
    summary: Get allowed login types for account
    operationId: getAllowedLoginTypes
    parameters:
      - name: accountId
        in: path
        description: ID of associated account
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    responses:
      '200':
        $ref: '../responses/_index.yaml#/AllowedLoginTypesResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
  put:
    description: Modify allowed login types for account
    tags:
      - account
    summary: Modify allowed login types for account
    operationId: modifyAllowedLoginTypes
    parameters:
      - name: accountId
        in: path
        description: ID of associated account
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    requestBody:
      $ref: '../request_bodies/_index.yaml#/ModifyAllowedLoginTypesRequest'
    responses:
      '200':
        description: Successfully modified allowed login types
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/public/accounts/{accountId}/alert_rules:
  get:
    description: API to fetch the alert rules for an account
    tags:
      - alerts
    summary: API to fetch the alert rules for an account
    operationId: listAlertRules
    parameters:
      - name: accountId
        in: path
        description: ID of the associated account
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    responses:
      '200':
        $ref: '../responses/_index.yaml#/AlertRulesListResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/public/accounts/{accountId}/alert_rules/{alertRuleId}/test_email:
  post:
    description: API to send test email alerts to users of an account
    tags:
      - alerts
    summary: API to send test email alerts to users of an account
    operationId: sendTestEmailAlert
    parameters:
      - name: accountId
        in: path
        description: ID of the associated account
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: alertRuleId
        in: path
        description: ID of the alert for changes
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    requestBody:
      $ref: '../request_bodies/_index.yaml#/AlertTestEmailRequest'
    responses:
      '200':
        description: Test email successfully sent
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/public/accounts/{accountId}/alert_rules/{alertRuleId}:
  put:
    description: API to modify alert rule for an account
    tags:
      - alerts
    summary: API to modify alert rule for an account
    operationId: updateAlertRule
    parameters:
      - name: accountId
        in: path
        description: ID of the associated account
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: alertRuleId
        in: path
        description: ID of the alert for changes
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    requestBody:
      $ref: '../request_bodies/_index.yaml#/AlertRuleSpec'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/AlertRuleResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/public/accounts/{accountId}/alerts/notifications:
  get:
    description: API to fetch the alert notifications for an account
    tags:
      - alerts
    summary: API to fetch the alert notifications for an account
    operationId: listAlertNotifications
    parameters:
      - name: accountId
        in: path
        description: ID of the associated account
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: level
        in: query
        description: Severity level
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: fetchNewAlerts
        in: query
        description: Fetch new alerts
        required: false
        style: simple
        explode: false
        schema:
          type: boolean
      - name: source
        in: query
        description: Listing by source i.e CLUSTER or BILLING
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: limit
        in: query
        description: Limit number of results returned per page
        required: false
        style: form
        explode: false
        schema:
          type: integer
          default: 25
          minimum: 1
          maximum: 100
      - name: continuation_token
        in: query
        description: Boundary before next page
        required: false
        style: form
        explode: false
        schema:
          type: string
    responses:
      '200':
        $ref: '../responses/_index.yaml#/AlertNotificationsListResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/public/accounts/{accountId}/audit/events:
  get:
    description: Get list of audit events for a given account
    tags:
      - audit-event
    summary: Get list of audit events for a given account
    operationId: listAuditEvents
    parameters:
      - name: accountId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: search
        in: query
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: event_type
        in: query
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: resource_type
        in: query
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: start_timestamp
        in: query
        description: Query start timestamp in UTC
        required: false
        style: form
        explode: false
        schema:
          type: string
          example: 2021-08-06T08:37:27.707Z
      - name: end_timestamp
        in: query
        description: Query end timestamp in UTC
        required: false
        style: form
        explode: false
        schema:
          type: string
          example: 2021-08-06T08:37:27.707Z
      - name: limit
        in: query
        description: Limit number of results returned per page
        required: false
        style: form
        explode: false
        schema:
          type: integer
          default: 25
          minimum: 1
          maximum: 100
      - name: continuation_token
        in: query
        description: Boundary before next page
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: uuid
      - name: order
        in: query
        description: Order of results
        required: false
        style: form
        explode: false
        schema:
          type: string
          default: desc
      - name: order_by
        in: query
        description: Sort results by attribute
        required: false
        style: form
        explode: false
        schema:
          type: string
          default: created_on
    responses:
      '200':
        $ref: '../responses/_index.yaml#/ListAuditEventResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/public/accounts/{accountId}/audit/events/{auditEventId}:
  get:
    description: Get detailed information about a specific audit log event
    tags:
      - audit-event
    summary: Get detailed information about a specific audit log event
    operationId: getAuditEventById
    parameters:
      - name: accountId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: auditEventId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    responses:
      '200':
        $ref: '../responses/_index.yaml#/AuditEventResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/public/accounts/{accountId}/audit/categories:
  get:
    description: Get audit event categories
    tags:
      - audit-event
    summary: Get audit event categories
    operationId: getAuditEventCategories
    parameters:
      - name: accountId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    responses:
      '200':
        $ref: '../responses/_index.yaml#/AuditEventCategoriesResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/public/accounts/{accountId}/quotas:
  parameters:
    - name: accountId
      in: path
      required: true
      description: Account to get quotas for
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
  get:
    description: Get account quotas
    tags:
      - account
    summary: Get account quotas
    operationId: getAccountQuotas
    responses:
      '200':
        $ref: '../responses/_index.yaml#/AccountQuotaResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/public/auth/login:
  post:
    description: Login a user
    tags:
      - auth
    summary: Login a user
    operationId: login
    requestBody:
      $ref: '../request_bodies/_index.yaml#/LoginRequest'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/LoginResponse'
      '302':
        description: Redirect URL
        headers:
          Location:
            schema:
              description: Redirect URL Location
              type: string
              format: uri
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/public/auth/logout:
  post:
    description: Logout a user
    tags:
      - auth
    summary: Logout a user
    operationId: logout
    parameters:
      - name: logout_all_sessions
        in: query
        description: Logout of all sessions
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          default: false
    responses:
      '200':
        description: User successfully logged out
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/public/auth/roles:
  get:
    operationId: listRoles
    description: List of system defined RBAC roles
    tags:
      - auth
    summary: List system defined RBAC roles
    responses:
      '200':
        $ref: '../responses/_index.yaml#/RoleListResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/public/auth/tokens:
  get:
    description: List auth tokens
    tags:
      - auth
    summary: List auth tokens
    operationId: listAuthTokens
    parameters:
      - name: order
        in: query
        description: Order of results
        required: false
        style: form
        explode: false
        schema:
          type: string
          default: asc
      - name: order_by
        in: query
        description: Sort results by attribute
        required: false
        style: form
        explode: false
        schema:
          type: string
          default: expiry_time
      - name: limit
        in: query
        description: Limit number of results returned per page
        required: false
        style: form
        explode: false
        schema:
          type: integer
          default: 25
          minimum: 1
          maximum: 100
      - name: continuation_token
        in: query
        description: Boundary before next page
        required: false
        style: form
        explode: false
        schema:
          type: string
    responses:
      '200':
        $ref: '../responses/_index.yaml#/AuthTokenListResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
  post:
    description: Create a new auth token
    tags:
      - auth
    summary: Create a new auth token
    operationId: createAuthToken
    requestBody:
      $ref: '../request_bodies/_index.yaml#/AuthTokenSpec'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/CreateAuthTokenResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/public/auth/tokens/{tokenId}:
  delete:
    description: Delete auth token
    tags:
      - auth
    summary: Delete auth token
    operationId: deleteAuthToken
    parameters:
      - name: tokenId
        in: path
        description: ID of auth token to be deleted
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    responses:
      '200':
        description: Auth Token successfully deleted
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
  get:
    description: Get auth token
    tags:
      - auth
    summary: Get auth token
    operationId: getAuthToken
    parameters:
      - name: tokenId
        in: path
        description: ID of auth token to be deleted
        required: true
        explode: false
        schema:
          type: string
          format: uuid
    responses:
      '200':
        $ref: '../responses/_index.yaml#/AuthTokenResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/public/accounts/{accountId}/projects/{projectId}/clusters/{clusterId}/backups':
  parameters:
    - name: accountId
      in: path
      description: ID of the associated account
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: projectId
      in: path
      description: ID of the associated project
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: clusterId
      in: path
      description: ID of the cluster
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
  delete:
    summary: Submit task to delete all backups of a cluster
    description: Delete all the backups of a cluster
    operationId: deleteClusterBackups
    tags:
      - backup
    responses:
      '200':
        description: Successfully submitted delete cluster backups request
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/public/accounts/{accountId}/projects/{projectId}/backups':
  parameters:
    - name: accountId
      in: path
      description: ID of the associated account
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: projectId
      in: path
      description: ID of the associated project
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
  get:
    summary: List backups
    description: List backups
    operationId: listBackups
    tags:
      - backup
    parameters:
      - name: cluster_id
        in: query
        description: ID of the queried cluster
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: uuid
      - name: action_type
        in: query
        description: Filter clusters by action type
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: state
        in: query
        description: Filter clusters by state
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: order
        in: query
        description: Order of results
        required: false
        style: form
        explode: false
        schema:
          type: string
          default: desc
      - name: order_by
        in: query
        description: Sort results by attribute
        required: false
        style: form
        explode: false
        schema:
          type: string
          default: created_on
      - name: limit
        in: query
        description: Limit number of results returned per page
        required: false
        style: form
        explode: false
        schema:
          type: integer
          default: 25
          minimum: 1
          maximum: 100
      - name: continuation_token
        in: query
        description: Boundary before next page
        required: false
        style: form
        explode: false
        schema:
          type: string
    responses:
      '200':
        $ref: '../responses/_index.yaml#/BackupListResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
  post:
    summary: Create backups
    description: Create backups
    operationId: createBackup
    tags:
      - backup
    requestBody:
      $ref: '../request_bodies/_index.yaml#/BackupSpec'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/BackupResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/public/accounts/{accountId}/projects/{projectId}/backups/{backupId}':
  parameters:
    - name: accountId
      in: path
      description: ID of the associated account
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: projectId
      in: path
      description: ID of the associated project
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: backupId
      in: path
      description: ID of the backup
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
  get:
    summary: Get a backup
    description: Get a backup
    operationId: getBackup
    tags:
      - backup
    responses:
      '200':
        $ref: '../responses/_index.yaml#/BackupResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
  delete:
    summary: Delete a backup
    description: Delete a backup
    operationId: deleteBackup
    tags:
      - backup
    responses:
      '200':
        description: Successfully submitted delete backup request
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/private/accounts/{accountId}/projects/{projectId}/backups/{backupId}':
  parameters:
    - name: accountId
      in: path
      description: ID of the associated account
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: projectId
      in: path
      description: ID of the associated project
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: backupId
      in: path
      description: ID of the backup
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
  get:
    summary: Get backup info along with the location
    description: Get a backup
    operationId: getBackupInfo
    tags:
      - internal-backup
    responses:
      '200':
        $ref: '../responses/_index.yaml#/MigrationBackupResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/public/accounts/{accountId}/projects/{projectId}/restore':
  parameters:
    - name: accountId
      in: path
      description: ID of the associated account
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: projectId
      in: path
      description: ID of the associated project
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
  get:
    description: List restore operations
    summary: List restore operations
    operationId: listRestores
    tags:
      - backup
    parameters:
      - name: backup_id
        in: query
        description: Filter restore operations by backup id
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: uuid
      - name: cluster_id
        in: query
        description: Filter restore operations by cluster id
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: uuid
      - name: state
        in: query
        description: Filter restore operations by its state
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: order
        in: query
        description: Order of results
        required: false
        style: form
        explode: false
        schema:
          type: string
          default: desc
      - name: order_by
        in: query
        description: Sort results by attribute
        required: false
        style: form
        explode: false
        schema:
          type: string
          default: created_on
      - name: limit
        in: query
        description: Limit number of results returned per page
        required: false
        style: form
        explode: false
        schema:
          type: integer
          default: 25
          minimum: 1
          maximum: 100
      - name: continuation_token
        in: query
        description: Boundary before next page
        required: false
        style: form
        explode: false
        schema:
          type: string
    responses:
      '200':
        $ref: '../responses/_index.yaml#/RestoreListResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
  post:
    description: Restore a backup to a Cluster
    summary: Restore a backup to a Cluster
    operationId: restoreBackup
    tags:
      - backup
    requestBody:
      $ref: '../request_bodies/_index.yaml#/RestoreSpec'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/RestoreResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/public/accounts/{accountId}/projects/{projectId}/backup_schedules':
  parameters:
    - name: accountId
      in: path
      description: ID of the associated account
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: projectId
      in: path
      description: ID of the associated project
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
  post:
    summary: Schedule a backup
    description: Schedule a backup
    operationId: scheduleBackup
    tags:
      - backup
    requestBody:
      $ref: '../request_bodies/_index.yaml#/BackupScheduleSpec'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/ScheduleResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
  get:
    description: List Schedules
    summary: List schedules
    operationId: listSchedules
    tags:
      - backup
    parameters:
      - name: task_type
        in: query
        description: Filter schedule operations by task type
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: entity_type
        in: query
        description: Filter schedule operations by its entity type
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: entity_id
        in: query
        description: Filter schedule operations by entity id
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: uuid
      - name: state
        in: query
        description: Filter schedule operations by its state
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: order
        in: query
        description: Order of results
        required: false
        style: form
        explode: false
        schema:
          type: string
          default: asc
      - name: order_by
        in: query
        description: Sort results by attribute
        required: false
        style: form
        explode: false
        schema:
          type: string
          default: task_type
      - name: limit
        in: query
        description: Limit number of results returned per page
        required: false
        style: form
        explode: false
        schema:
          type: integer
          default: 25
          minimum: 1
          maximum: 100
      - name: continuation_token
        in: query
        description: Boundary before next page
        required: false
        style: form
        explode: false
        schema:
          type: string
    responses:
      '200':
        $ref: '../responses/_index.yaml#/ScheduleListResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/public/accounts/{accountId}/projects/{projectId}/backup_schedules/{scheduleId}':
  parameters:
    - name: accountId
      in: path
      description: ID of the associated account
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: projectId
      in: path
      description: ID of the associated project
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: scheduleId
      in: path
      description: ID of the associated schedule
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
  put:
    summary: Edit the backup schedule
    description: Edit the backup schedule
    operationId: editBackupSchedule
    tags:
      - backup
    requestBody:
      $ref: '../request_bodies/_index.yaml#/BackupScheduleSpec'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/ScheduleResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
  delete:
    summary: Delete a schedule
    description: Delete a schedule
    operationId: deleteSchedule
    tags:
      - backup
    responses:
      '200':
        description: Successfully deleted schedule
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
  get:
    summary: Get a schedule
    description: Get a schedule
    operationId: getSchedule
    tags:
      - backup
    responses:
      '200':
        $ref: '../responses/_index.yaml#/ScheduleResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/public/billing/accounts/{accountId}/estimate:
  post:
    description: This API to calculate the estimated cost of the cluster
    tags:
      - billing
    summary: This API to calculate the estimated cost of the cluster
    parameters:
      - name: accountId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    operationId: estimateClusterCost
    requestBody:
      $ref: '../request_bodies/_index.yaml#/EstimateClusterCostRequest'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/EstimateClusterCostResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/public/billing/accounts/{accountId}/default_payment_method:
  get:
    description: Get default payment method
    tags:
      - billing
    summary: Get default payment method
    parameters:
      - name: accountId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    operationId: getDefaultPaymentMethod
    responses:
      '200':
        $ref: '../responses/_index.yaml#/GetDefaultPaymentMethodResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/public/billing/accounts/{accountId}/billing_profile:
  post:
    description: This API adds billing profile
    tags:
      - billing
    summary: This API adds billing profile
    parameters:
      - name: accountId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    operationId: createBillingProfile
    requestBody:
      $ref: '../request_bodies/_index.yaml#/BillingProfileSpec'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/BillingProfileResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
  get:
    description: This API gets billing profile
    tags:
      - billing
    summary: This API gets billing profile
    parameters:
      - name: accountId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    operationId: getBillingProfile
    responses:
      '200':
        $ref: '../responses/_index.yaml#/BillingProfileResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
  put:
    description: This API updates billing profile
    tags:
      - billing
    summary: This API updates billing profile
    parameters:
      - name: accountId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    operationId: modifyBillingProfile
    requestBody:
      $ref: '../request_bodies/_index.yaml#/BillingProfileSpec'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/BillingProfileResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/public/billing/accounts/{accountId}/payment_methods/attach:
  post:
    description: Attaches payment method to the stripe customer
    tags:
      - billing
    summary: Attaches payment method to the stripe customer
    operationId: attachPaymentMethod
    parameters:
      - name: accountId
        in: path
        required: true
        explode: false
        style: simple
        schema:
          type: string
          format: uuid
    requestBody:
      $ref: '../request_bodies/_index.yaml#/PaymentMethodSpec'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/PaymentMethodResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/public/billing/accounts/{accountId}/payment_methods/{paymentMethodId}:
  delete:
    description: This API deletes payment method
    tags:
      - billing
    summary: This API deletes payment method
    parameters:
      - name: accountId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: paymentMethodId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
    operationId: deletePaymentMethod
    responses:
      '200':
        $ref: '../responses/_index.yaml#/PaymentMethodResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/public/billing/accounts/{accountId}/payment_methods/{paymentMethodId}/default_payment_method:
  post:
    description: This API sets default payment method
    tags:
      - billing
    summary: This API sets default payment method
    parameters:
      - name: accountId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: paymentMethodId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
    operationId: setDefaultPaymentMethod
    responses:
      '200':
        $ref: '../responses/_index.yaml#/PaymentMethodResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/public/billing/accounts/{accountId}/projects/{projectId}/clusters/{clusterId}/rate_info:
  get:
    description: Get rate info of an account
    tags:
      - billing
    summary: Get rate info of an account
    parameters:
      - name: accountId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: projectId
        in: path
        description: Project to which cluster belongs
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: clusterId
        in: path
        description: Get rate info for specified cluster
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    operationId: getRateInfo
    responses:
      '200':
        $ref: '../responses/_index.yaml#/RateInfoResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/public/billing/accounts/{accountId}/payment_methods:
  get:
    description: Lists billing payment methods
    tags:
      - billing
    summary: Lists billing payment methods
    parameters:
      - name: accountId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    operationId: listPaymentMethods
    responses:
      '200':
        $ref: '../responses/_index.yaml#/PaymentMethodListResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/public/billing/accounts/{accountId}/set_up_intent/create:
  post:
    description: Create set up intent object
    tags:
      - billing
    summary: Create set up intent object
    parameters:
      - name: accountId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    operationId: createSetupIntent
    responses:
      '200':
        $ref: '../responses/_index.yaml#/SetupIntentResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/public/billing/accounts/{accountId}/credits:
  get:
    description: Get list of credits for an account
    tags:
      - billing
    summary: Get list of credits for an account
    parameters:
      - name: accountId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: limit
        in: query
        description: Limit number of results returned per page
        required: false
        style: form
        explode: false
        schema:
          type: integer
          default: 25
          minimum: 1
          maximum: 100
      - name: continuation_token
        in: query
        description: Boundary before next page
        required: false
        style: form
        explode: false
        schema:
          type: string
    operationId: listCredits
    responses:
      '200':
        $ref: '../responses/_index.yaml#/CreditListResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/public/billing/accounts/{accountId}/invoices:
  get:
    description: Get list of invoices for an account
    tags:
      - billing-invoice
    summary: Get list of invoices for an account
    parameters:
      - name: accountId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: limit
        in: query
        description: Limit number of results returned per page
        required: false
        style: form
        explode: false
        schema:
          type: integer
          default: 25
          minimum: 1
          maximum: 100
      - name: continuation_token
        in: query
        description: Boundary before next page
        required: false
        style: form
        explode: false
        schema:
          type: string
    operationId: listInvoices
    responses:
      '200':
        $ref: '../responses/_index.yaml#/InvoiceListResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/public/billing-invoice/accounts/{accountId}/summary:
  get:
    description: Billing invoice summary
    tags:
      - billing-invoice
    summary: Billing invoice summary
    operationId: getBillingInvoiceSummary
    parameters:
      - name: accountId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    responses:
      '200':
        $ref: '../responses/_index.yaml#/BillingInvoiceSummaryResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/public/billing-invoice/accounts/{accountId}/invoices/{invoiceId}/summary:
  get:
    description: Billing invoice summary  by invoice id
    tags:
      - billing-invoice
    summary: Billing invoice summary by invoice id
    operationId: getBillingInvoiceSummaryByInvoiceId
    parameters:
      - name: accountId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: invoiceId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    responses:
      '200':
        $ref: '../responses/_index.yaml#/BillingInvoiceSummaryResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/public/billing-invoice/accounts/{accountId}/invoices/{invoiceId}/usage_summary:
  get:
    description: Get account's summary usage
    tags:
      - billing-invoice
    summary: Get account's summary usage
    operationId: getUsageSummary
    parameters:
      - name: accountId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: invoiceId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    responses:
      '200':
        $ref: '../responses/_index.yaml#/UsageSummaryResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/public/billing-invoice/accounts/{accountId}/invoices/{invoiceId}/usage_summary_statistics:
  get:
    description: Get account's summary usage statistics
    tags:
      - billing-invoice
    summary: Get account's summary usage statistics
    operationId: getUsageSummaryStatistics
    parameters:
      - name: accountId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: invoiceId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    responses:
      '200':
        $ref: '../responses/_index.yaml#/UsageSummaryStatisticsResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/public/accounts/{accountId}/projects/{projectId}/clusters':
  get:
    description: List clusters
    tags:
      - cluster
    summary: List clusters
    operationId: listClusters
    parameters:
      - name: accountId
        in: path
        description: ID of the associated account
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: projectId
        in: path
        description: ID of the associated project
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: name
        in: query
        description: Filter clusters by name
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: cloud
        in: query
        description: Filter projects by cloud
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: region
        in: query
        description: Filter clusters by region
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: state
        in: query
        description: Filter clusters by state
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: tier
        in: query
        description: Filter clusters by tier
        required: false
        style: form
        explode: false
        schema:
          type: string
          enum: ["FREE", "PAID"]
      - name: vpc_id
        in: query
        description: Filter clusters by VPC ID
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: uuid
      - name: scheduled_upgrade_execution_id
        in: query
        description: Filter clusters by scheduled upgrade execution ID
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: uuid
      - name: order
        in: query
        description: Order of results
        required: false
        style: form
        explode: false
        schema:
          type: string
          default: asc
      - name: order_by
        in: query
        description: Sort results by attribute
        required: false
        style: form
        explode: false
        schema:
          type: string
          default: name
      - name: limit
        in: query
        description: Limit number of results returned per page
        required: false
        style: form
        explode: false
        schema:
          type: integer
          default: 25
          minimum: 1
          maximum: 100
      - name: continuation_token
        in: query
        description: Boundary before next page
        required: false
        style: form
        explode: false
        schema:
          type: string
    responses:
      '200':
        $ref: '../responses/_index.yaml#/ClusterListResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
  post:
    description: Create a new Yugabyte Cluster
    tags:
      - cluster
    summary: Create a cluster
    operationId: createCluster
    parameters:
      - name: accountId
        in: path
        description: ID of the associated account
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: projectId
        in: path
        description: ID of the associated project
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    requestBody:
      $ref: '../request_bodies/_index.yaml#/CreateClusterRequest'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/ClusterResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
  parameters:
    - schema:
        type: string
      name: accountId
      in: path
      required: true
    - schema:
        type: string
      name: projectId
      in: path
      required: true
'/cluster':
  get:
    summary: Get a cluster
    description: Get a Yugabyte Cluster
    operationId: getCluster
    tags:
      - cluster
    responses:
      '200':
        $ref: '../responses/_index.yaml#/ClusterResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
  delete:
    summary: Submit task to delete a cluster
    description: Submit task to delete a Yugabyte Cluster
    tags:
      - cluster
    responses:
      '200':
        description: Successfully submitted delete cluster request
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
    operationId: deleteCluster
  put:
    summary: Submit task to edit a cluster
    description: Submit task to edit a Yugabyte Cluster
    operationId: editCluster
    tags:
      - cluster
    requestBody:
      $ref: '../request_bodies/_index.yaml#/ClusterSpec'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/ClusterResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/public/accounts/{accountId}/projects/{projectId}/clusters/{clusterId}/pause':
  parameters:
    - name: accountId
      in: path
      description: ID of the associated account
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: projectId
      in: path
      description: ID of the associated project
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: clusterId
      in: path
      description: ID of the cluster
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
  post:
    summary: Submit task to pause a cluster
    description: Submit task to pause a Yugabyte Cluster
    operationId: pauseCluster
    tags:
      - cluster
    responses:
      '200':
        $ref: '../responses/_index.yaml#/ClusterResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/public/accounts/{accountId}/projects/{projectId}/clusters/{clusterId}/resume':
  parameters:
    - name: accountId
      in: path
      description: ID of the associated account
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: projectId
      in: path
      description: ID of the associated project
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: clusterId
      in: path
      description: ID of the cluster
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
  post:
    summary: Submit task to resume a cluster
    description: Submit task to resume a Yugabyte Cluster
    operationId: resumeCluster
    tags:
      - cluster
    responses:
      '200':
        $ref: '../responses/_index.yaml#/ClusterResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/public/accounts/{accountId}/projects/{projectId}/clusters/{clusterId}/nodes/op':
  parameters:
    - name: accountId
      in: path
      description: ID of the associated account
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: projectId
      in: path
      description: ID of the associated project
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: clusterId
      in: path
      description: ID of the cluster
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
  post:
    summary: Submit task to operate on a node
    description: Submit task to operate on a node
    operationId: nodeOp
    tags:
      - cluster
    requestBody:
      $ref: '../request_bodies/_index.yaml#/NodeOpRequest'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/NodeOpResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/public/accounts/{accountId}/projects/{projectId}/cluster_metrics':
  get:
    description: Get bulk cluster metrics
    tags:
      - cluster-info
    summary: Get bulk cluster metrics
    operationId: getBulkClusterMetrics
    parameters:
      - name: accountId
        in: path
        description: ID of the associated account
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: projectId
        in: path
        description: ID of the associated project
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: cluster_ids
        in: query
        description: Clusters to get metrics data for
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            format: uuid
          uniqueItems: true
          nullable: false
          minItems: 1
          maxItems: 25
    responses:
      '200':
        $ref: '../responses/_index.yaml#/ClusterInstantMetricsListResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/live_queries':
  get:
    summary: Get the live queries in a cluster
    description: Get the Live Queries in a Yugabyte Cluster
    operationId: getLiveQueries
    tags:
      - cluster-info
    parameters:
      - name: api
        in: query
        description: type of queries for which to retrieve Live Queries (YSQL or YCQL)
        required: false
        style: form
        explode: false
        schema:
          type: string
          enum: [YSQL, YCQL]
    responses:
      '200':
        $ref: '../responses/_index.yaml#/LiveQueryResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/slow_queries':
  get:
    summary: Get the slow queries in a cluster
    description: Get the Slow Queries in a Yugabyte Cluster
    operationId: getSlowQueries
    tags:
      - cluster-info
    responses:
      '200':
        $ref: '../responses/_index.yaml#/SlowQueryResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/nodes':
  get:
    summary: Get the nodes for a cluster
    description: Get nodes for a Yugabyte cluster
    operationId: getClusterNodes
    tags:
      - cluster-info
    responses:
      '200':
        $ref: '../responses/_index.yaml#/ClusterNodeListResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/metrics':
  parameters:
    - name: metrics
      in: query
      description: Which metrics to retrieve results for
      required: true
      style: form
      explode: false
      schema:
        type: string
    - name: node_name
      in: query
      description: Node name within the cluster
      required: false
      style: form
      explode: false
      schema:
        type: string
    - name: region
      in: query
      description: Region name to filter for the given cluster
      required: false
      style: form
      explode: false
      schema:
        type: string
    - name: start_time
      in: query
      description: Start of range of time series data (in epoch seconds)
      required: false
      style: form
      explode: false
      schema:
        type: integer
        format: int64
        minimum: 0
    - name: end_time
      in: query
      description: End of range of time series data (in epoch seconds)
      required: false
      style: form
      explode: false
      schema:
        type: integer
        format: int64
        minimum: 0
  get:
    summary: Get a metric for a cluster
    description: Get metrics for a Yugabyte cluster
    operationId: getClusterMetric
    tags:
      - cluster-info
    responses:
      '200':
        $ref: '../responses/_index.yaml#/MetricResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/tables:
  get:
    description: Get list of tables per YB API (YCQL/YSQL)
    operationId: getClusterTables
    summary: Get list of DB tables per YB API (YCQL/YSQL)
    tags:
      - cluster-info
    parameters:
      - name: api
        in: query
        description: Which DB API to get tables for (YCQL/YSQL)
        required: false
        style: form
        explode: false
        schema:
          type: string
          enum: [YCQL, YSQL]
    responses:
      '200':
        $ref: '../responses/_index.yaml#/ClusterTableListResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/public/accounts/{accountId}/projects/{projectId}/clusters/{clusterId}/tablespaces:
  get:
    description: Get list of tablespaces for YSQL
    operationId: getClusterTablespaces
    summary: Get list of DB tables for YSQL
    tags:
      - cluster-info
    parameters:
      - name: accountId
        in: path
        description: ID of the associated account
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: projectId
        in: path
        description: ID of the associated project
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: clusterId
        in: path
        description: ID of the cluster
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    responses:
      '200':
        $ref: '../responses/_index.yaml#/ClusterTablespacesListResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/public/accounts/{accountId}/projects/{projectId}/clusters/{clusterId}/network/allow_lists:
  put:
    description: Modify set of allow lists associated to a cluster
    operationId: editClusterNetworkAllowLists
    summary: Modify set of allow lists associated to a cluster
    tags:
      - cluster-network
    parameters:
      - name: accountId
        in: path
        description: ID of the associated account
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: projectId
        in: path
        description: ID of the associated project
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: clusterId
        in: path
        description: ID of the cluster
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    requestBody:
      $ref: '../request_bodies/_index.yaml#/NetworkAllowListIdList'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/NetworkAllowListListResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
  get:
    description: Get list of allow lists associated to a cluster
    operationId: listClusterNetworkAllowLists
    summary: Get list of allow list entities associated to a cluster
    tags:
      - cluster-network
    parameters:
      - name: accountId
        in: path
        description: ID of the associated account
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: projectId
        in: path
        description: ID of the associated project
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: clusterId
        in: path
        description: ID of the cluster
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    responses:
      '200':
        $ref: '../responses/_index.yaml#/NetworkAllowListListResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/public/certificate':
  get:
    operationId: getCACert
    description: Get the CA certificate to use for connection to the cluster
    summary: Get certificate for connection to the cluster
    tags:
      - cluster-resources
    responses:
      '200':
        $ref: '../responses/_index.yaml#/CertificateResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/public/regions/{cloud}':
  get:
    operationId: getRegions
    description: Get list of available regions to deploy a cluster in
    summary: Retrieve list of regions available to deploy cluster by cloud
    tags:
      - cluster-resources
    parameters:
      - name: cloud
        in: path
        description: The choice of deployment cloud
        required: true
        style: simple
        explode: false
        schema:
          type: string
    responses:
      '200':
        $ref: '../responses/_index.yaml#/RegionListResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/public/{accountId}/instance_types/{cloud}':
  get:
    operationId: getInstanceTypes
    description: Get the list of supported instance types for a given region/zone and provider
    summary: Get the list of supported instance types for a given region/zone and provider
    tags:
      - cluster-resources
    parameters:
      - name: accountId
        in: path
        description: account id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: cloud
        in: path
        description: cloud provider code (AWS/GCP)
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum: [AWS, GCP]
      - name: tier
        in: query
        description: tier to retrieve specs for
        required: false
        style: form
        explode: false
        schema:
          type: string
          default: PAID
          enum: [FREE, PAID]
      - name: region
        in: query
        description: region to retrieve specs for
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: show_disabled
        in: query
        description: show all instance types, each with an is_enabled boolean variable set
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          default: false
    responses:
      '200':
        $ref: '../responses/_index.yaml#/InstanceTypeSpecMapResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/public/clusters/tier_spec:
  get:
    operationId: getClusterTierSpecs
    description: Get the cost, number of cores, disk size, transactions, connections, and memory specs associated with paid and free tier clusters.
    summary: Get base prices and specs of free and paid tier clusters
    tags:
      - cluster-resources
    responses:
      '200':
        $ref: '../responses/_index.yaml#/ClusterTierSpecsResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/public/ping:
  get:
    description: Check if application is alive
    summary: A simple ping healthcheck endpoint
    tags:
      - health-check
    responses:
      '200':
        $ref: '../responses/_index.yaml#/HealthCheckResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
    operationId: getPing
/private/account:
  get:
    description: List accounts
    tags:
      - internal-account
    summary: List accounts
    operationId: listAccounts
    parameters:
      - name: name
        in: query
        description: Filter accounts by name
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: order
        in: query
        description: Order of results
        required: false
        style: form
        explode: false
        schema:
          type: string
          default: asc
      - name: order_by
        in: query
        description: Sort results by attribute
        required: false
        style: form
        explode: false
        schema:
          type: string
          default: name
      - name: limit
        in: query
        description: Limit number of results returned per page
        required: false
        style: form
        explode: false
        schema:
          type: integer
          default: 25
          minimum: 1
          maximum: 100
      - name: continuation_token
        in: query
        description: Boundary before next page
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: track_id
        in: query
        description: ID of track
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: uuid
    responses:
      '200':
        $ref: '../responses/_index.yaml#/AccountListResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/private/auth/admin_token:
  get:
    description: Create an admin JWT for bearer authentication
    summary: Create an admin JWT for bearer authentication
    tags:
      - internal-auth
    parameters:
      - name: userId
        in: query
        description: ID of user to mimic
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: uuid
      - name: impersonatingUserEmail
        in: query
        description: Email of the user impersonating the above user
        required: false
        style: form
        explode: false
        schema:
          type: string
    operationId: getAdminApiToken
    responses:
      '200':
        $ref: '../responses/_index.yaml#/AdminApiTokenResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/private/auth/admin_token/list:
  get:
    description: List admin JWTs.
    tags:
      - internal-auth
    summary: List admin JWTs
    operationId: listAdminApiTokens
    parameters:
      - name: user_id
        in: query
        description: ID of the user who is being mimicked
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: uuid
      - name: impersonating_user_email
        in: query
        description: email of the admin user who has issued the token
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: issuing_authority
        in: query
        description: service account email used to issue the token
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: only_generic_jwts
        in: query
        description: boolean field to list only generic admin jwts
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: order
        in: query
        description: Order of results
        required: false
        style: form
        explode: false
        schema:
          type: string
          default: asc
      - name: order_by
        in: query
        description: Sort results by attribute
        required: false
        style: form
        explode: false
        schema:
          type: string
          default: expiry_time
      - name: limit
        in: query
        description: Limit number of results returned per page
        required: false
        style: form
        explode: false
        schema:
          type: integer
          default: 25
          minimum: 1
          maximum: 100
      - name: continuation_token
        in: query
        description: Boundary before next page
        required: false
        style: form
        explode: false
        schema:
          type: string
    responses:
      '200':
        $ref: '../responses/_index.yaml#/AdminTokenListResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/private/auth/admin_token/{adminTokenId}:
  delete:
    description: Delete admin token
    tags:
      - internal-auth
    summary: Delete admin token
    operationId: deleteAdminApiToken
    parameters:
      - name: adminTokenId
        in: path
        description: ID of admin token to be deleted
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    responses:
      '200':
        description: Admin Token successfully deleted
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/private/accounts/{accountId}/projects/{projectId}/restore_migration':
  parameters:
    - name: accountId
      in: path
      description: ID of the associated account
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: projectId
      in: path
      description: ID of the associated project
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
  post:
    description: Restore a backup to a Cluster
    summary: Restore a backup from the specified bucket to a Cluster
    operationId: restoreMigrationBackup
    tags:
      - internal-backup
    requestBody:
      $ref: '../request_bodies/_index.yaml#/MigrationRestoreSpec'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/MigrationRestoreResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/private/billing/accounts/{accountId}/rate_card:
  post:
    description: Creates rate card for the account
    tags:
      - internal-billing
    summary: Creates rate card for the account
    operationId: createRateCard
    parameters:
      - name: accountId
        in: path
        required: true
        explode: false
        style: simple
        schema:
          type: string
          format: uuid
    requestBody:
      $ref: '../request_bodies/_index.yaml#/RateCardSpec'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/RateCardResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/private/billing/global_rate_card:
  put:
    description: Updates global rate card
    tags:
      - internal-billing
    summary: Updates global rate card
    operationId: updateGlobalRateCard
    requestBody:
      $ref: '../request_bodies/_index.yaml#/GlobalRateCardSpec'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/GlobalRateCardResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/private/billing/accounts/{accountId}/credits:
  post:
    description: Add credits to the given account, 1 credit = 1 usd
    tags:
      - internal-billing
    summary: API to add credits to the given account
    operationId: addCreditToBillingAccount
    parameters:
      - name: accountId
        in: path
        required: true
        explode: false
        style: simple
        schema:
          type: string
          format: uuid
    requestBody:
      $ref: '../request_bodies/_index.yaml#/CreditSpec'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/CreditResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/private/billing/accounts/{accountId}/credits/{creditId}:
  put:
    description: Update credits for the given account
    tags:
      - internal-billing
    summary: API to update credits for the given account
    operationId: updateCreditsForAccount
    parameters:
      - name: accountId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: creditId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    requestBody:
      $ref: '../request_bodies/_index.yaml#/UpdateCreditsSpec'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/UpdateCreditsResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/private/billing/accounts/{accountId}/payment_method:
  put:
    description: Update payment method for a billing account to OTHER/EMPLOYEE
    tags:
      - internal-billing
    summary: API to update billing method to OTHER/EMPLOYEE
    operationId: updatePaymentMethod
    parameters:
      - name: accountId
        in: path
        required: true
        explode: false
        style: simple
        schema:
          type: string
          format: uuid
    requestBody:
      $ref: '../request_bodies/_index.yaml#/UpdatePaymentMethodSpec'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/UpdatePaymentMethodResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/private/billing/accounts/{accountId}/invoice/aggregate:
  post:
    description: Run daily billing aggregation
    tags:
      - internal-billing
    summary: Run daily billing aggregation
    operationId: aggregate
    parameters:
      - name: accountId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    requestBody:
      $ref: '../request_bodies/_index.yaml#/AggregateSpec'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/AggregateResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/private/billing/accounts/{accountId}/invoice/generate:
  post:
    description: Generate an invoice for the account
    tags:
      - internal-billing
    summary: Generate an invoice for the account
    operationId: generateInvoice
    parameters:
      - name: accountId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    responses:
      '200':
        $ref: '../responses/_index.yaml#/InvoiceResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/private/billing/invoice/set_automatic_invoice_generation:
  post:
    description: Enable or disable automatic invoice generation
    tags:
      - internal-billing
    summary: Enable or disable automatic invoice generation
    operationId: setAutomaticInvoiceGeneration
    requestBody:
      $ref: '../request_bodies/_index.yaml#/SetAutomaticInvoiceGenerationSpec'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/SetAutomaticInvoiceGenerationResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/private/billing/accounts/{accountId}/invoices/{invoiceId}:
  delete:
    description: Delete billing invoice
    tags:
      - internal-billing
    summary: Delete billing invoice
    operationId: deleteInvoice
    parameters:
      - name: accountId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: invoiceId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    responses:
      '200':
        description: Billing invoice successfully deleted
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
  put:
    description: Update billing invoice
    tags:
      - internal-billing
    summary: Update billing invoice
    operationId: updateBillingInvoice
    parameters:
      - name: accountId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: invoiceId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    requestBody:
      $ref: '../request_bodies/_index.yaml#/UpdateBillingInvoiceSpec'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/UpdateBillingInvoiceResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/private/clusters/scrape_targets:
  put:
    description: Rebuild metrics scrape targets
    summary: Rebuild prometheus configmap for scrape targets
    operationId: rebuildScrapeTargets
    tags:
      - internal-cluster
    requestBody:
      $ref: '../request_bodies/_index.yaml#/RebuildMetricsTargetsRequest'
    responses:
      '200':
        description: Rebuild has started
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/private/accounts/{accountId}/projects/{projectId}/clusters':
  parameters:
    - schema:
        type: string
      name: accountId
      in: path
      required: true
    - schema:
        type: string
      name: projectId
      in: path
      required: true
  post:
    description: Create a new Private Yugabyte Cluster
    tags:
      - internal-cluster
    summary: Create a Private cluster
    operationId: createPrivateCluster
    parameters:
      - name: accountId
        in: path
        description: ID of the associated account
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: projectId
        in: path
        description: ID of the associated project
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    requestBody:
      $ref: '../request_bodies/_index.yaml#/CreatePrivateClusterRequest'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/ClusterResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/private/accounts/{accountId}/projects/{projectId}/clusters/{clusterId}':
  parameters:
    - name: accountId
      in: path
      description: ID of the associated account
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: projectId
      in: path
      description: ID of the associated project
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: clusterId
      in: path
      description: ID of the cluster
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
  get:
    summary: Get a cluster
    description: Get a Yugabyte Cluster along with internal cluster info
    operationId: getClusterInternalDetails
    tags:
      - internal-cluster
    responses:
      '200':
        $ref: '../responses/_index.yaml#/InternalClusterResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
  put:
    summary: Submit task to edit a private cluster
    description: Submit task to edit a private Yugabyte Cluster
    operationId: editPrivateCluster
    tags:
      - internal-cluster
    requestBody:
      $ref: '../request_bodies/_index.yaml#/PrivateClusterSpec'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/ClusterResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/private/accounts/{accountId}/projects/{projectId}/clusters/{clusterId}/upgrade/db':
  parameters:
    - name: accountId
      in: path
      description: ID of the associated account
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: projectId
      in: path
      description: ID of the associated project
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: clusterId
      in: path
      description: ID of the cluster
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
  post:
    summary: Submit task to upgrade DB version of a cluster
    description: Submit task to upgrade DB version of a cluster
    operationId: dbUpgrade
    tags:
      - internal-cluster
    requestBody:
      $ref: '../request_bodies/_index.yaml#/DbUpgradeRequest'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/ClusterResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/private/accounts/{accountId}/projects/{projectId}/clusters/{clusterId}/upgrade/vm':
  parameters:
    - name: accountId
      in: path
      description: ID of the associated account
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: projectId
      in: path
      description: ID of the associated project
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: clusterId
      in: path
      description: ID of the cluster
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
  post:
    summary: Submit task to upgrade VM image of a cluster
    description: Submit task to upgrade VM image of a cluster
    operationId: vmUpgrade
    tags:
      - internal-cluster
    requestBody:
      $ref: '../request_bodies/_index.yaml#/VmUpgradeRequest'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/ClusterResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/private/db_releases':
  parameters:
    - name: versionPrefixes
      in: query
      description: Version prefixes to filter the releases
      required: true
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
  get:
    description: Get all the available DB releases for upgrade
    summary: Get all the available DB releases for upgrade
    operationId: getDbReleases
    tags:
      - internal-cluster
    responses:
      '200':
        $ref: '../responses/_index.yaml#/DbReleasesListResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/private/accounts/{accountId}/projects/{projectId}/clusters/{clusterId}/gflags':
  parameters:
    - name: accountId
      in: path
      description: Account ID of the cluster
      required: true
      style: form
      explode: false
      schema:
        type: string
        format: uuid
    - name: projectId
      in: path
      description: Project ID of the cluster
      required: true
      style: form
      explode: false
      schema:
        type: string
        format: uuid
    - name: clusterId
      in: path
      description: Cluster ID
      required: true
      style: form
      explode: false
      schema:
        type: string
        format: uuid
  get:
    operationId: listGFlags
    description: List all GFlags on a cluster
    summary: List all GFlags on a cluster
    tags:
      - internal-cluster
    responses:
      '200':
        $ref: '../responses/_index.yaml#/GFlagsDataResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
  post:
    summary: Submit task to upgrade gflags of a cluster
    description: Submit task to upgrade gflags of Yugabyte cluster
    operationId: gflagsUpgrade
    tags:
      - internal-cluster
    requestBody:
      $ref: '../request_bodies/_index.yaml#/GflagsUpgradeRequest'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/ClusterResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/private/accounts/{accountId}/projects/{projectId}/clusters/{clusterId}/lock:
  parameters:
    - name: accountId
      in: path
      description: ID of the associated account
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: projectId
      in: path
      description: ID of the associated project
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: clusterId
      in: path
      description: ID of the cluster
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
  post:
    description: Acquire lock on the cluster
    summary: Acquire lock on the cluster
    operationId: lockClusterForSupport
    tags:
      - internal-cluster
    responses:
      '200':
        description: Acquired lock successfully
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/private/accounts/{accountId}/projects/{projectId}/clusters/{clusterId}/platform':
  get:
    operationId: getPlatformForCluster
    description: Get data of platform which manages the given cluster
    summary: Get data of platform which manages the given cluster
    tags:
      - internal-cluster
    parameters:
      - name: accountId
        in: path
        description: Account ID of the cluster
        required: true
        style: form
        explode: false
        schema:
          type: string
          format: uuid
      - name: projectId
        in: path
        description: Project ID of the cluster
        required: true
        style: form
        explode: false
        schema:
          type: string
          format: uuid
      - name: clusterId
        in: path
        description: Cluster ID
        required: true
        style: form
        explode: false
        schema:
          type: string
          format: uuid
    responses:
      '200':
        $ref: '../responses/_index.yaml#/PlatformResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/private/accounts/{accountId}/projects/{projectId}/clusters/{clusterId}/unlock:
  parameters:
    - name: accountId
      in: path
      description: ID of the associated account
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: projectId
      in: path
      description: ID of the associated project
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: clusterId
      in: path
      description: ID of the cluster
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
  post:
    description: Release lock on the cluster
    summary: Release lock on the cluster
    operationId: unlockClusterForSupport
    tags:
      - internal-cluster
    responses:
      '200':
        description: Lock released successfully
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/private/accounts/{accountId}/projects/{projectId}/clusters/{clusterId}/nodes':
  parameters:
    - name: accountId
      in: path
      description: ID of the associated account
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: projectId
      in: path
      description: ID of the associated project
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: clusterId
      in: path
      description: ID of the cluster
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: region
      in: query
      description: Filter nodes by region
      required: false
      style: form
      explode: false
      schema:
        type: string
  get:
    summary: Get internal nodes for a cluster
    description: Get internal nodes for a cluster
    operationId: getInternalClusterNodes
    tags:
      - internal-cluster-info
    responses:
      '200':
        $ref: '../responses/_index.yaml#/InternalClusterNodesResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/private/accounts/{accountId}/projects/{projectId}/clusters/{clusterId}/network/allow_lists:
  put:
    description: Modify set of allow lists associated to a cluster
    operationId: editExternalOrInternalClusterNetworkAllowLists
    summary: Modify set of allow lists associated to a cluster
    tags:
      - internal-cluster-network
    parameters:
      - name: accountId
        in: path
        description: ID of the associated account
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: projectId
        in: path
        description: ID of the associated project
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: clusterId
        in: path
        description: ID of the cluster
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    requestBody:
      $ref: '../request_bodies/_index.yaml#/NetworkAllowListIdList'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/InternalNetworkAllowListListResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
  get:
    description: Get list of allow lists associated to a cluster
    operationId: listAllClusterNetworkAllowLists
    summary: Get list of allow list entities associated to a cluster
    tags:
      - internal-cluster-network
    parameters:
      - name: accountId
        in: path
        description: ID of the associated account
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: projectId
        in: path
        description: ID of the associated project
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: clusterId
        in: path
        description: ID of the cluster
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    responses:
      '200':
        $ref: '../responses/_index.yaml#/InternalNetworkAllowListListResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/private/custom_image_sets:
  get:
    description: API to list all custom image sets
    tags:
      - internal-custom-image-set
    summary: API to list custom image sets
    operationId: listCustomImageSets
    parameters:
      - name: cloud_type
        in: query
        description: Filter custom image sets by cloud type
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: db_version
        in: query
        description: Filter custom image sets by DB version
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: base_image_name
        in: query
        description: Filter custom image sets by base image name
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: build_reference
        in: query
        description: Filter custom image sets by build reference
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: architecture
        in: query
        description: Filter custom image sets by architecture
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: is_default
        in: query
        description: Filter custom image sets by default value
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: order
        in: query
        description: Order of results
        required: false
        style: form
        explode: false
        schema:
          type: string
          default: asc
      - name: order_by
        in: query
        description: Sort results by attribute
        required: false
        style: form
        explode: false
        schema:
          type: string
          default: created_on
      - name: limit
        in: query
        description: Limit number of results returned per page
        required: false
        style: form
        explode: false
        schema:
          type: integer
          default: 25
          minimum: 1
          maximum: 1000
      - name: continuation_token
        in: query
        description: Boundary before next page
        required: false
        style: form
        explode: false
        schema:
          type: string
    responses:
      '200':
        $ref: '../responses/_index.yaml#/CustomImageSetListResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
  post:
    description: API to create custom image sets in bulk
    tags:
      - internal-custom-image-set
    summary: API to create custom image sets in bulk
    operationId: createCustomImageSetsInBulk
    requestBody:
      $ref: '../request_bodies/_index.yaml#/CreateBulkCustomImageSetSpec'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/CreateBulkCustomImageSetResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/private/custom_image_sets/{customImageSetId}:
  get:
    description: Get information about specific custom image set
    tags:
      - internal-custom-image-set
    summary: API to get details about custom image set
    operationId: getCustomImageSetDetails
    parameters:
      - name: customImageSetId
        in: path
        description: ID of custom image set to fetch details for
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    responses:
      '200':
        $ref: '../responses/_index.yaml#/CustomImageSetResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
  post:
    description: Add a custom image to the specific custom image set
    tags:
      - internal-custom-image-set
    summary: API to add a custom image to the specified custom image set
    operationId: addCustomImageToSet
    parameters:
      - name: customImageSetId
        in: path
        description: ID of custom image set to which custom image needs to be added
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    requestBody:
      $ref: '../request_bodies/_index.yaml#/CustomImageRequest'
    responses:
      '200':
        description: 'Custom image successfully added to the specified set'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
  delete:
    description: Delete custom image set
    tags:
      - internal-custom-image-set
    summary: Delete custom image set
    operationId: deleteCustomImageSet
    parameters:
      - name: customImageSetId
        in: path
        description: ID of custom image set to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    responses:
      '200':
        description: Custom image set successfully deleted
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/private/custom_image_sets/{customImageSetId}/default:
  post:
    description: Mark a custom image set as default
    tags:
      - internal-custom-image-set
    summary: Mark a custom image set as default
    operationId: markCustomImageSetAsDefault
    parameters:
      - name: customImageSetId
        in: path
        description: ID of custom image set to mark as default
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    responses:
      '200':
        description: Custom image set marked as default successfully.
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/private/email:
  post:
    description: Send email with given template
    tags:
      - internal-email
    summary: Send email with given template
    operationId: sendEmail
    requestBody:
      $ref: '../request_bodies/_index.yaml#/SendEmailSpec'
    responses:
      '200':
        description: Successfully sent email
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/private/fault_injection:
  get:
    description: Get fault injections
    tags:
      - internal-fault-injection
    summary: Get fault injections
    operationId: getFaultNames
    responses:
      '200':
        $ref: '../responses/_index.yaml#/FaultInjectionResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/private/fault_injection/{fault_name}:
  get:
    description: Get armed fault injections
    tags:
      - internal-fault-injection
    summary: Get list of entity refs for the specified fault
    operationId: getEntityRefs
    parameters:
      - name: fault_name
        in: path
        description: Fault name
        required: true
        style: form
        explode: false
        schema:
          type: string
    responses:
      '200':
        $ref: '../responses/_index.yaml#/FaultInjectionListResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/private/fault_injection/arm:
  post:
    description: Arm fault injection
    tags:
      - internal-fault-injection
    summary: Arm fault injection
    operationId: armFaultInjectionForEntity
    requestBody:
      $ref: '../request_bodies/_index.yaml#/FaultInjectionRequest'
    responses:
      '200':
        description: Fault Successfully armed
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/private/fault_injection/disarm:
  delete:
    description: Disarm fault injection
    tags:
      - internal-fault-injection
    summary: Disarm fault injection
    operationId: disarmFaultInjectionForEntity
    requestBody:
      $ref: '../request_bodies/_index.yaml#/FaultInjectionRequest'
    responses:
      '200':
        description: Fault Successfully diarmed
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/private/logger:
  get:
    description: Get Logging Level
    summary: Get Logging Level
    operationId: getLoggingLevel
    tags:
      - internal-logger
    parameters:
      - name: logger_type
        in: query
        description: Type of logger for which to fetch logging level
        required: false
        style: form
        explode: false
        schema:
          type: string
    responses:
      '200':
        $ref: '../responses/_index.yaml#/LoggingLevelResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
  put:
    description: Set Logging Level
    summary: Set Logging Level
    operationId: setLoggingLevel
    tags:
      - internal-logger
    parameters:
      - name: logging_level
        in: query
        description: Level to which to set the Logger
        required: true
        style: form
        explode: false
        schema:
          type: string
          enum: ['OFF', ERROR, WARN, INFO, DEBUG, TRACE, ALL]
      - name: logger_type
        in: query
        description: Type of Logger for which logging level needs to be set
        required: false
        style: form
        explode: false
        schema:
          type: string
    responses:
      '200':
        $ref: '../responses/_index.yaml#/LoggingLevelResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/private/accounts/{accountId}/projects/{projectId}/clusters/{clusterId}/maintenance/schedule/gflags:
  parameters:
    - name: accountId
      in: path
      description: ID of the associated account
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: projectId
      in: path
      description: ID of the associated project
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: clusterId
      in: path
      description: ID of the associated cluster
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
  post:
    description: API to set use_custom_gflags flag for a cluster's maintenance schedule
    tags:
      - internal-maintenance
    summary: API to set use_custom_gflags flag for a cluster's maintenance schedule
    operationId: updateGflagMaintenance
    requestBody:
      $ref: '../request_bodies/_index.yaml#/UpdateGflagMaintenanceRequest'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/UpdateGflagMaintenanceResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/private/version:
  get:
    summary: Get application version
    description: Get application version
    tags:
      - internal-metadata
    operationId: getVersion
    responses:
      '200':
        $ref: '../responses/_index.yaml#/VersionInfo'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/private/metering/accounts/{accountId}:
  get:
    description: Get metering data
    tags:
      - internal-metering
    summary: Get metering data
    operationId: getMeteringData
    parameters:
      - name: accountId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: start_timestamp
        in: query
        description: Query start timestamp
        required: true
        style: form
        explode: false
        schema:
          type: string
          example: 2021-08-06T08:37:27.707Z
      - name: end_timestamp
        in: query
        description: Query end timestamp
        required: true
        style: form
        explode: false
        schema:
          type: string
          example: 2021-08-07T08:37:27.707Z
      - name: cluster_ids
        in: query
        description: Get metering data for cluster with ids
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            format: uuid
    responses:
      '200':
        $ref: '../responses/_index.yaml#/MeteringResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/private/accounts/{accountId}/projects/{projectId}/network/allow_lists':
  post:
    description: Create a private allow list
    operationId: createInternalNetworkAllowList
    summary: Create a private allow list entity
    tags:
      - internal-network
    parameters:
      - name: accountId
        in: path
        description: ID of the associated account
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: projectId
        in: path
        description: ID of the associated project
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    requestBody:
      $ref: '../request_bodies/_index.yaml#/NetworkAllowListSpec'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/InternalNetworkAllowListResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
  get:
    description: Get list of internal + external allow lists
    operationId: listAllNetworkAllowLists
    summary: Get list of allow list entities
    tags:
      - internal-network
    parameters:
      - name: accountId
        in: path
        description: ID of the associated account
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: projectId
        in: path
        description: ID of the associated project
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    responses:
      '200':
        $ref: '../responses/_index.yaml#/InternalNetworkAllowListListResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/private/accounts/{accountId}/projects/{projectId}/network/allow_lists/{allowListId}':
  get:
    description: Retrieve an allow list
    operationId: getExternalOrInternalNetworkAllowList
    summary: Retrieve an allow list entity
    tags:
      - internal-network
    parameters:
      - name: accountId
        in: path
        description: ID of the associated account
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: projectId
        in: path
        description: ID of the associated project
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: allowListId
        in: path
        description: ID of the allow list entity
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    responses:
      '200':
        $ref: '../responses/_index.yaml#/InternalNetworkAllowListResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
  delete:
    description: Delete an allow list
    operationId: deleteExternalOrInternalNetworkAllowList
    summary: Delete an allow list entity
    tags:
      - internal-network
    parameters:
      - name: accountId
        in: path
        description: ID of the associated account
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: projectId
        in: path
        description: ID of the associated project
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: allowListId
        in: path
        description: ID of the allow list entity
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    responses:
      '200':
        description: Allow list successfully deleted
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/private/network:
  get:
    description: List all networks
    tags:
      - internal-network
    summary: List all cluster networks
    operationId: listNetworks
    parameters:
      - name: cloud_provider_project
        in: query
        description: Filter platforms by cloud provider project/account
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: cloud
        in: query
        description: Filter platforms by cloud
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: region
        in: query
        description: Filter platforms by region
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: under_maintenance
        in: query
        description: Filter active VPCs
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: order
        in: query
        description: Order of results
        required: false
        style: form
        explode: false
        schema:
          type: string
          default: asc
      - name: order_by
        in: query
        description: Sort results by attribute
        required: false
        style: form
        explode: false
        schema:
          type: string
          default: cloud_provider_project
      - name: limit
        in: query
        description: Limit number of results returned per page
        required: false
        style: form
        explode: false
        schema:
          type: integer
          default: 25
          minimum: 1
          maximum: 100
      - name: continuation_token
        in: query
        description: Boundary before next page
        required: false
        style: form
        explode: false
        schema:
          type: string
    responses:
      '200':
        $ref: '../responses/_index.yaml#/NetworkListResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
  post:
    description: Add new cluster network
    tags:
      - internal-network
    summary: Add new cluster network
    operationId: addNetwork
    requestBody:
      $ref: '../request_bodies/_index.yaml#/AddNetworkRequest'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/NetworkResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/private/accounts/{accountId}/projects/{projectId}/network/vpcs':
  post:
    description: Add customer VPC metadata
    tags:
      - internal-network
    summary: Create customer-facing VPC metadata for cluster isolation
    operationId: createSingleTenantVpcMetadata
    parameters:
      - name: accountId
        in: path
        description: ID of the associated account
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: projectId
        in: path
        description: ID of the associated project
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    requestBody:
      $ref: '../request_bodies/_index.yaml#/InternalSingleTenantVpcRequest'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/SingleTenantVpcResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/private/accounts/{accountId}/projects/{projectId}/network/vpcs/{vpcId}/peer':
  post:
    description: Peer two yugabyte VPC
    tags:
      - internal-network
    summary: Peer two yugabyte VPC
    operationId: createInternalVpcPeering
    parameters:
      - name: accountId
        in: path
        description: accountId of user
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: projectId
        in: path
        description: projectId of user
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: vpcId
        in: path
        description: ID of first yugabyte VPC to peer
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    requestBody:
      $ref: '../request_bodies/_index.yaml#/InternalVpcPeeringRequest'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/InternalVPCPeeringResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/private/accounts/{accountId}/projects/{projectId}/network/vpcs/{peeringId}':
  delete:
    description: Delete internal VPC peering between two yugabyte VPC
    tags:
      - internal-network
    summary: Delete internal VPC peering between two yugabyte VPC
    operationId: deleteInternalVpcPeering
    parameters:
      - name: accountId
        in: path
        description: accountId of user
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: projectId
        in: path
        description: projectId of user
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: peeringId
        in: path
        description: ID of VPC peering
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    responses:
      '200':
        description: Internal Yugabyte VPCs sucessfully deleted
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/private/network/maintenance':
  parameters:
    - name: vpcIds
      in: query
      description: IDs of VPCs
      required: true
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          format: uuid
        minItems: 1
        maxItems: 25
        uniqueItems: true
    - name: maintenance_status
      in: query
      description: Mark VPCs for maintenance
      required: true
      style: form
      explode: false
      schema:
        type: boolean
  post:
    description: Mark VPCs as under maintenance
    tags:
      - internal-network
    summary: Mark VPCs for Maintenance
    operationId: markVpcsForMaintenance
    responses:
      '200':
        description: Okay
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/private/platform:
  get:
    description: List platforms
    tags:
      - internal-platform
    summary: List platforms
    operationId: listPlatforms
    parameters:
      - name: hostname
        in: query
        description: Filter platforms by name
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: cloud
        in: query
        description: Filter platforms by cloud
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: region
        in: query
        description: Filter platforms by region
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: under_maintenance
        in: query
        description: Filter active platforms
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: order
        in: query
        description: Order of results
        required: false
        style: form
        explode: false
        schema:
          type: string
          default: asc
      - name: order_by
        in: query
        description: Sort results by attribute
        required: false
        style: form
        explode: false
        schema:
          type: string
          default: cloud_type
      - name: limit
        in: query
        description: Limit number of results returned per page
        required: false
        style: form
        explode: false
        schema:
          type: integer
          default: 25
          minimum: 1
          maximum: 100
      - name: continuation_token
        in: query
        description: Boundary before next page
        required: false
        style: form
        explode: false
        schema:
          type: string
    responses:
      '200':
        $ref: '../responses/_index.yaml#/PlatformListResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
  post:
    description: Add new platform
    tags:
      - internal-platform
    summary: Add new platform
    operationId: addPlatform
    requestBody:
      $ref: '../request_bodies/_index.yaml#/AddPlatformRequest'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/PlatformResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/private/platform/{platformId}':
  parameters:
    - name: platformId
      in: path
      description: ID of platform to return
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
  get:
    description: Get platform by ID
    tags:
      - internal-platform
    summary: Get platform by ID
    operationId: getPlatform
    responses:
      '200':
        $ref: '../responses/_index.yaml#/PlatformResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/private/platform/{platformId}/project':
  parameters:
    - name: platformId
      in: path
      description: ID of platform to return
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
  post:
    description: Assign project to platform
    tags:
      - internal-platform
    summary: Add project to platform
    operationId: addProjectToPlatform
    requestBody:
      $ref: '../request_bodies/_index.yaml#/AddProjectToPlatformRequest'
    responses:
      '200':
        description: Success
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/private/platform/maintenance':
  parameters:
    - name: platformIds
      in: query
      description: IDs of platforms to return
      required: true
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          format: uuid
        minItems: 1
        uniqueItems: true
    - name: maintenance_status
      in: query
      description: Mark platforms for maintenance
      required: true
      style: form
      explode: false
      schema:
        type: boolean
  post:
    description: Mark platforms as under maintenance
    tags:
      - internal-platform
    summary: Mark Platforms for Maintenance
    operationId: markPlatformsForMaintenance
    responses:
      '200':
        description: Success
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/private/platform/providers/refresh-pricing:
  put:
    description: Refresh pricing in specified existing customer providers
    tags:
      - internal-platform
    summary: Refresh pricing in specified existing customer providers
    operationId: refreshProviderPricing
    requestBody:
      $ref: '../request_bodies/_index.yaml#/RefreshProviderPricingSpec'
    responses:
      '200':
        description: Success
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/private/runtime_config:
  parameters:
    - name: scopeId
      in: query
      description: ID of the scope for whose runtime config the operations are to be done
      required: false
      style: form
      explode: false
      schema:
        type: string
        format: uuid
    - name: scopeType
      in: query
      description: Scope type of the scopeId
      required: true
      style: form
      explode: false
      schema:
        type: string
        enum: [GLOBAL, ACCOUNT]
  put:
    description: Update or delete configuration keys for given scope.
    tags:
      - internal-runtime-config
    summary: Update configuration keys for given scope.
    operationId: updateRuntimeConfig
    requestBody:
      $ref: '../request_bodies/_index.yaml#/RuntimeConfigUpdateRequest'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/RuntimeConfigUpdateResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
  get:
    description: Get runtime configuration
    operationId: getRuntimeConfig
    summary: Get runtime configuration
    tags:
      - internal-runtime-config
    responses:
      '200':
        $ref: '../responses/_index.yaml#/RuntimeConfigResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/private/scheduled_upgrade/tracks/{trackId}:
  post:
    operationId: scheduleBulkUpgrade
    description: Schedule a Bulk Upgrade
    summary: Schedule an upgrade based on cluster tier and optionally cloud/region
    tags:
      - internal-scheduled-upgrade
    parameters:
      - name: trackId
        in: path
        description: ID of the track to schedule an upgrade for
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    requestBody:
      $ref: '../request_bodies/_index.yaml#/UpgradeRequestSpec'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/ScheduledUpgradeTaskResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/private/scheduled_upgrade/accounts/{accountId}/projects/{projectId}/clusters/{clusterId}:
  post:
    operationId: scheduleClusterUpgrade
    description: Schedule Cluster Upgrade
    summary: Schedule an Upgrade for the specified Cluster
    tags:
      - internal-scheduled-upgrade
    parameters:
      - name: accountId
        in: path
        description: Account ID of the cluster
        required: true
        style: form
        explode: false
        schema:
          type: string
          format: uuid
      - name: projectId
        in: path
        description: Project ID of the cluster
        required: true
        style: form
        explode: false
        schema:
          type: string
          format: uuid
      - name: clusterId
        in: path
        description: Cluster ID
        required: true
        style: form
        explode: false
        schema:
          type: string
          format: uuid
    requestBody:
      $ref: '../request_bodies/_index.yaml#/ClusterBasedUpgradeRequestSpec'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/ScheduledClusterUpgradeTaskResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/private/scheduled_upgrade:
  get:
    operationId: listScheduledUpgrades
    description: List Scheduled Upgrades
    summary: List currently scheduled upgrade tasks
    tags:
      - internal-scheduled-upgrade
    parameters:
      - name: limit
        in: query
        description: Limit number of results returned per page
        required: false
        style: form
        explode: false
        schema:
          type: integer
          default: 25
          minimum: 1
          maximum: 100
      - name: continuation_token
        in: query
        description: Boundary before next page
        required: false
        style: form
        explode: false
        schema:
          type: string
    responses:
      '200':
        $ref: '../responses/_index.yaml#/ScheduledUpgradeTaskListResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/private/scheduled_upgrade/{taskId}/clusters/{clusterId}:
  delete:
    operationId: removeClusterFromExecution
    description: Remove Cluster From Execution
    summary: Remove a cluster from a scheduled upgrade execution
    tags:
      - internal-scheduled-upgrade
    parameters:
      - name: taskId
        in: path
        description: upgrade task ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: clusterId
        in: path
        description: cluster ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    responses:
      '204':
        description: removed successfully
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/private/scheduled_upgrade/{taskId}:
  delete:
    operationId: cancelScheduledUpgrade
    description: Cancel Scheduled Upgrade
    summary: Cancel a scheduled upgrade task
    tags:
      - internal-scheduled-upgrade
    parameters:
      - name: taskId
        in: path
        description: upgrade task ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    responses:
      '204':
        description: cancelled successfully
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/private/software/tracks:
  post:
    description: Create a DB software release track
    operationId: createTrack
    summary: Create a DB software release track
    tags:
      - internal-software-release
    requestBody:
      $ref: '../request_bodies/_index.yaml#/SoftwareReleaseTrackSpec'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/SoftwareReleaseTrackResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
  get:
    description: List all DB software release tracks
    operationId: listTracks
    summary: List all DB software release tracks
    tags:
      - internal-software-release
    parameters:
      - name: limit
        in: query
        description: Limit number of results returned per page
        required: false
        style: form
        explode: false
        schema:
          type: integer
          default: 25
          minimum: 1
          maximum: 100
      - name: continuation_token
        in: query
        description: Boundary before next page
        required: false
        style: form
        explode: false
        schema:
          type: string
    responses:
      '200':
        $ref: '../responses/_index.yaml#/SoftwareReleaseTrackListPagedResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/private/software/tracks/{trackId}:
  delete:
    description: Delete a DB software release track
    operationId: deleteTrack
    summary: Delete a DB software release track
    tags:
      - internal-software-release
    parameters:
      - name: trackId
        in: path
        description: ID of the associated DB SW track
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    responses:
      '204':
        description: deleted successfully
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/private/software/tracks/{trackId}/releases:
  post:
    description: Create a software release
    operationId: createRelease
    summary: Create a software release
    tags:
      - internal-software-release
    parameters:
      - name: trackId
        in: path
        description: ID of the associated DB SW track
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    requestBody:
      $ref: '../request_bodies/_index.yaml#/SoftwareReleaseSpec'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/SoftwareReleaseResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
  get:
    description: List of all software releases for a track
    operationId: listReleasesOnTrack
    summary: List all DB software releases by track
    tags:
      - internal-software-release
    parameters:
      - name: trackId
        in: path
        description: ID of the associated DB SW track
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: limit
        in: query
        description: Limit number of results returned per page
        required: false
        style: form
        explode: false
        schema:
          type: integer
          default: 25
          minimum: 1
          maximum: 100
      - name: continuation_token
        in: query
        description: Boundary before next page
        required: false
        style: form
        explode: false
        schema:
          type: string
    responses:
      '200':
        $ref: '../responses/_index.yaml#/SoftwareReleaseListResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/private/software/tracks/{trackId}/releases/{releaseId}:
  parameters:
    - name: trackId
      in: path
      description: ID of the associated DB SW track
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: releaseId
      in: path
      description: ID of the associated DB SW version
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
  put:
    description: Update a software release
    operationId: updateRelease
    summary: Update a software release
    tags:
      - internal-software-release
    requestBody:
      $ref: '../request_bodies/_index.yaml#/SoftwareReleaseSpec'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/SoftwareReleaseResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
  delete:
    description: Delete a software release
    operationId: deleteRelease
    summary: Delete a software release
    tags:
      - internal-software-release
    responses:
      '204':
        description: deleted successfully
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/private/accounts/{accountId}/software/tracks:
  parameters:
    - name: accountId
      in: path
      description: ID of Account
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
  post:
    description: Batch Add release tracks to account
    operationId: batchAddTracks
    summary: Add release tracks to account
    tags:
      - internal-software-release
    requestBody:
      $ref: '../request_bodies/_index.yaml#/BatchAddSoftwareTrackRequest'
    responses:
      '200':
        description: Successfully added software release track to account
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/private/accounts/{accountId}/software/tracks/{trackId}:
  parameters:
    - name: accountId
      in: path
      description: ID of Account
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: trackId
      in: path
      description: ID of Track
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
  delete:
    description: Remove release track from account
    operationId: removeTrack
    summary: Remove release track from account
    tags:
      - internal-software-release
    responses:
      '200':
        description: deleted successfully
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/private/internal_tags/allowed_values:
  get:
    description: API to fetch allowed values for internal tags
    tags:
      - internal-tags
    summary: API to fetch allowed values for internal tags
    operationId: getAllowedValuesForInternalTags
    responses:
      '200':
        $ref: '../responses/_index.yaml#/GetAllowedValuesForInternalTagsResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/private/users/{userId}/internal_tags:
  get:
    description: API to get user internal tags for a given user
    tags:
      - internal-tags
    summary: API to get user internal tags for a given user
    operationId: getUserInternalTags
    parameters:
      - name: userId
        in: path
        description: ID of the associated user
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    responses:
      '200':
        $ref: '../responses/_index.yaml#/GetUserInternalTagsResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
  post:
    description: API to set/update internal tags for a given user
    tags:
      - internal-tags
    summary: API to set/update internal tags for a given user
    operationId: updateUserInternalTags
    parameters:
      - name: userId
        in: path
        description: ID of the associated user
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    requestBody:
      $ref: '../request_bodies/_index.yaml#/UpdateUserInternalTagsRequest'
    responses:
      '200':
        description: Successfully updated user internal tags
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/private/internal_tags/default:
  get:
    description: API to fetch all the default internal tags
    tags:
      - internal-tags
    summary: API to fetch all the default internal tags
    operationId: listAllDefaultInternalTags
    parameters:
      - name: email_prefix
        in: query
        description: Filter default internal tags by email prefix
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: yb_dept
        in: query
        description: Filter default internal tags by yb dept tag
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: yb_task
        in: query
        description: Filter default internal tags by yb task tag
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: order
        in: query
        description: Order of results
        required: false
        style: form
        explode: false
        schema:
          type: string
          default: asc
      - name: order_by
        in: query
        description: Sort results by attribute
        required: false
        style: form
        explode: false
        schema:
          type: string
          default: email_prefix
      - name: limit
        in: query
        description: Limit number of results returned per page
        required: false
        style: form
        explode: false
        schema:
          type: integer
          default: 25
          minimum: 1
          maximum: 1000
      - name: continuation_token
        in: query
        description: Boundary before next page
        required: false
        style: form
        explode: false
        schema:
          type: string
    responses:
      '200':
        $ref: '../responses/_index.yaml#/DefaultInternalTagsListResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
  post:
    description: API to batch set/update default internal tags
    tags:
      - internal-tags
    summary: API to batch set/update default internal tags
    operationId: updateDefaultInternalTags
    requestBody:
      $ref: '../request_bodies/_index.yaml#/UpdateDefaultInternalTagsRequest'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/UpdateDefaultInternalTagsResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/private/scheduled_tasks/{task}:
  post:
    description: Trigger a scheduled task to run
    tags:
      - internal-task
    summary: Run scheduled task
    operationId: runScheduledTask
    parameters:
      - name: task
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: task_instance
        in: query
        required: false
        description: ID of task instance to run
        style: form
        explode: false
        schema:
          type: string
    responses:
      '200':
        $ref: '../responses/_index.yaml#/RunScheduledTaskResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/private/accounts/{accountId}/tasks':
  parameters:
    - name: accountId
      in: path
      description: ID of the associated account
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
  get:
    summary: List tasks
    description: List tasks (including internal tasks)
    operationId: listTasksAll
    tags:
      - internal-task
    parameters:
      - name: projectId
        in: query
        description: ID of the associated project
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: uuid
      - name: entity_id
        in: query
        description: ID of the queried entity
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: uuid
      - name: entity_type
        in: query
        description: Type of entity to look for
        required: false
        style: form
        explode: false
        schema:
          type: string
          enum: [BACKUP, CLUSTER, CLUSTER_ALLOW_LIST, PROJECT]
      - name: task_type
        in: query
        description: Type of task to look for
        required: false
        style: form
        explode: false
        schema:
          type: string
          enum: [CREATE_CLUSTER, EDIT_CLUSTER, DELETE_CLUSTER, EDIT_ALLOW_LIST, CREATE_BACKUP, RESTORE_BACKUP, DELETE_PROJECT, UPGRADE_CLUSTER, PAUSE_CLUSTER, RESUME_CLUSTER]
      - name: locking
        in: query
        description: Get locking tasks
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: internal_task
        in: query
        description: Get internal tasks
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: order
        in: query
        description: Order of results
        required: false
        style: form
        explode: false
        schema:
          type: string
          default: desc
      - name: order_by
        in: query
        description: Sort results by attribute
        required: false
        style: form
        explode: false
        schema:
          type: string
          default: created_on
      - name: limit
        in: query
        description: Limit number of results returned per page
        required: false
        style: form
        explode: false
        schema:
          type: integer
          default: 25
          minimum: 1
          maximum: 100
      - name: continuation_token
        in: query
        description: Boundary before next page
        required: false
        style: form
        explode: false
        schema:
          type: string
    responses:
      '200':
        $ref: '../responses/_index.yaml#/TaskListResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/private/taskEvents/{eventId}:
  post:
    description: Post a task-related event callback
    tags:
      - internal-task-event
    summary: Post a task-related event callback
    operationId: eventCallback
    parameters:
      - name: eventId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    responses:
      '204':
        description: successful callback
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/private/users:
  get:
    operationId: listAllUsers
    parameters:
      - name: account_id
        in: query
        description: Filter users by account id
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: uuid
      - name: email
        in: query
        description: Filter users by email
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: first_name
        in: query
        description: Filter users by first_name
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: last_name
        in: query
        description: Filter users by last_name
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: state
        in: query
        description: Filter users by state
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: order
        in: query
        description: Order of results
        required: false
        style: form
        explode: false
        schema:
          type: string
          default: asc
      - name: order_by
        in: query
        description: Sort results by attribute
        required: false
        style: form
        explode: false
        schema:
          type: string
          default: email
      - name: limit
        in: query
        description: Limit number of results returned per page
        required: false
        style: form
        explode: false
        schema:
          type: integer
          default: 25
          minimum: 1
          maximum: 100
      - name: continuation_token
        in: query
        description: Boundary before next page
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: email_prefix
        in: query
        description: Search prefix for user emails
        required: false
        style: form
        explode: false
        schema:
          type: string
    description: List users
    tags:
      - internal-user
    summary: List all users
    responses:
      '200':
        $ref: '../responses/_index.yaml#/UserListResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/private/users/activate:
  post:
    description: Activate signup user
    tags:
      - internal-user
    summary: Activate signup user by skipping token validation
    operationId: activateSignupUserWithoutToken
    parameters:
      - name: email
        in: query
        description: user email for activation
        required: true
        style: form
        explode: false
        schema:
          type: string
    responses:
      '200':
        description: User sucessfully activated
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/private/users/activate_invited:
  post:
    description: Activate invited user
    tags:
      - internal-user
    summary: Activate invited user by skipping token validation
    operationId: activateInvitedUserWithoutToken
    requestBody:
      $ref: '../request_bodies/_index.yaml#/InviteUserRequest'
    responses:
      '200':
        description: User sucessfully activated
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/private/users/{userId}/cleanup:
  delete:
    description: Cleanup User
    tags:
      - internal-user
    summary: Delete user and remove the accounts/projects of which they are the sole admin
    operationId: cleanupUser
    parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    responses:
      '200':
        description: User successfully deleted
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/private/accounts/{accountId}/projects/{projectId}/xcluster_replication:
  post:
    description: API to create replication
    tags:
      - internal-xcluster-replication
    summary: API to create replication
    operationId: createXclusterReplication
    parameters:
      - name: accountId
        in: path
        description: ID of the associated account
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: projectId
        in: path
        description: ID of the associated project
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    requestBody:
      $ref: '../request_bodies/_index.yaml#/XClusterConfigSpec'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/XClusterConfigResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/public/accounts/{accountId}/projects/{projectId}/clusters/{clusterId}/maintenance/events/{executionId}/delay:
  parameters:
    - name: accountId
      in: path
      description: ID of the associated account
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: projectId
      in: path
      description: ID of the associated project
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: clusterId
      in: path
      description: ID of the associated cluster
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: executionId
      in: path
      description: ID of the associated execution
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
  post:
    description: API to delay maintenance events for a cluster
    tags:
      - maintenance
    summary: API to delay maintenance events for a cluster
    operationId: delayMaintenanceEvent
    responses:
      '200':
        $ref: '../responses/_index.yaml#/ScheduledUpgradeResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/public/accounts/{accountId}/projects/{projectId}/clusters/{clusterId}/maintenance/events/{executionId}/trigger:
  parameters:
    - name: accountId
      in: path
      description: ID of the associated account
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: projectId
      in: path
      description: ID of the associated project
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: clusterId
      in: path
      description: ID of the associated cluster
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: executionId
      in: path
      description: ID of the associated execution
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
  post:
    description: API to trigger maintenance events for a cluster
    tags:
      - maintenance
    summary: API to trigger maintenance events for a cluster
    operationId: triggerMaintenanceEvent
    responses:
      '200':
        description: Successfully triggered scheduled upgrade
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/public/accounts/{accountId}/projects/{projectId}/clusters/{clusterId}/maintenance/events:
  parameters:
    - name: accountId
      in: path
      description: ID of the associated account
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: projectId
      in: path
      description: ID of the associated project
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: clusterId
      in: path
      description: ID of the associated cluster
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
  get:
    description: API to list all scheduled maintenance events for a cluster
    tags:
      - maintenance
    summary: API to list all scheduled maintenance events for a cluster
    operationId: listScheduledMaintenanceEventsForCluster
    parameters:
      - name: limit
        in: query
        description: Limit number of results returned per page
        required: false
        style: form
        explode: false
        schema:
          type: integer
          default: 25
          minimum: 1
          maximum: 100
      - name: continuation_token
        in: query
        description: Boundary before next page
        required: false
        style: form
        explode: false
        schema:
          type: string
    responses:
      '200':
        $ref: '../responses/_index.yaml#/ScheduledMaintenanceEventListResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/public/accounts/{accountId}/projects/{projectId}/clusters/{clusterId}/maintenance/schedule:
  parameters:
    - name: accountId
      in: path
      description: ID of the associated account
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: projectId
      in: path
      description: ID of the associated project
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: clusterId
      in: path
      description: ID of the associated cluster
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
  get:
    description: API to get maintenance schedules
    tags:
      - maintenance
    summary: API to get maintenance schedules
    operationId: getMaintenanceSchedule
    responses:
      '200':
        $ref: '../responses/_index.yaml#/MaintenanceScheduleResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
  put:
    description: API to update maintenance schedules
    tags:
      - maintenance
    summary: API to update maintenance schedules
    operationId: updateMaintenanceSchedule
    requestBody:
      $ref: '../request_bodies/_index.yaml#/MaintenanceScheduleSpec'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/MaintenanceScheduleResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/public/accounts/{accountId}/projects/{projectId}/clusters/{clusterId}/maintenance/{executionId}/next_available_window:
  parameters:
    - name: accountId
      in: path
      description: ID of the associated account
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: projectId
      in: path
      description: ID of the associated project
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: clusterId
      in: path
      description: ID of the associated cluster
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: executionId
      in: path
      description: ID of the associated execution
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
  get:
    description: API to next maintenance window for a cluster
    tags:
      - maintenance
    summary: API to get next maintenance window for a cluster
    operationId: getNextMaintenanceWindowInfo
    responses:
      '200':
        $ref: '../responses/_index.yaml#/MaintenanceWindowResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/public/accounts/{accountId}/projects/{projectId}/network/allow_lists':
  post:
    description: Create an allow list
    operationId: createNetworkAllowList
    summary: Create an allow list entity
    tags:
      - network
    parameters:
      - name: accountId
        in: path
        description: ID of the associated account
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: projectId
        in: path
        description: ID of the associated project
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    requestBody:
      $ref: '../request_bodies/_index.yaml#/NetworkAllowListSpec'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/NetworkAllowListResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
  get:
    description: Get list of allow lists
    operationId: listNetworkAllowLists
    summary: Get list of allow list entities
    tags:
      - network
    parameters:
      - name: accountId
        in: path
        description: ID of the associated account
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: projectId
        in: path
        description: ID of the associated project
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    responses:
      '200':
        $ref: '../responses/_index.yaml#/NetworkAllowListListResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/public/accounts/{accountId}/projects/{projectId}/network/allow_lists/{allowListId}':
  get:
    description: Retrieve an allow list
    operationId: getNetworkAllowList
    summary: Retrieve an allow list entity
    tags:
      - network
    parameters:
      - name: accountId
        in: path
        description: ID of the associated account
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: projectId
        in: path
        description: ID of the associated project
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: allowListId
        in: path
        description: ID of the allow list entity
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    responses:
      '200':
        $ref: '../responses/_index.yaml#/NetworkAllowListResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
  delete:
    description: Delete an allow list
    operationId: deleteNetworkAllowList
    summary: Delete an allow list entity
    tags:
      - network
    parameters:
      - name: accountId
        in: path
        description: ID of the associated account
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: projectId
        in: path
        description: ID of the associated project
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: allowListId
        in: path
        description: ID of the allow list entity
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    responses:
      '200':
        description: Allow list successfully deleted
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/public/accounts/{accountId}/projects/{projectId}/network/vpcs/{vpcId}':
  parameters:
    - name: accountId
      in: path
      description: ID of the associated account
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: projectId
      in: path
      description: ID of the associated project
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: vpcId
      in: path
      description: ID of the VPC
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
  get:
    description: Get customer VPC
    tags:
      - network
    summary: Get customer-facing VPC by ID
    operationId: getSingleTenantVpc
    responses:
      '200':
        $ref: '../responses/_index.yaml#/SingleTenantVpcResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
  delete:
    description: Delete customer VPC
    tags:
      - network
    summary: Delete customer-facing VPC by ID
    operationId: deleteVpc
    responses:
      '200':
        description: Successfully submitted delete vpc request
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/public/accounts/{accountId}/projects/{projectId}/network/vpc-peerings':
  post:
    description: Create a peering
    tags:
      - network
    summary: Create a peering between customer VPC and Yugabyte VPC
    operationId: createVpcPeering
    parameters:
      - name: accountId
        in: path
        description: ID of the associated account
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: projectId
        in: path
        description: ID of the associated project
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    requestBody:
      $ref: '../request_bodies/_index.yaml#/VpcPeeringRequest'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/VpcPeeringResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
  get:
    description: List peerings
    tags:
      - network
    summary: List peerings between customer VPCs and Yugabyte VPCs
    operationId: listVpcPeerings
    parameters:
      - name: accountId
        in: path
        description: ID of the associated account
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: projectId
        in: path
        description: ID of the associated project
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: vpc_id
        in: query
        description: Filter results by VPC ID
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: uuid
      - name: order
        in: query
        description: Order of results
        required: false
        style: form
        explode: false
        schema:
          type: string
          default: asc
      - name: order_by
        in: query
        description: Sort results by attribute
        required: false
        style: form
        explode: false
        schema:
          type: string
          default: name
      - name: limit
        in: query
        description: Limit number of results returned per page
        required: false
        style: form
        explode: false
        schema:
          type: integer
          default: 25
          minimum: 1
          maximum: 100
      - name: continuation_token
        in: query
        description: Boundary before next page
        required: false
        style: form
        explode: false
        schema:
          type: string
    responses:
      '200':
        $ref: '../responses/_index.yaml#/VpcPeeringListResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/public/accounts/{accountId}/projects/{projectId}/network/vpc-peerings/{peeringId}':
  parameters:
    - name: accountId
      in: path
      description: ID of the associated account
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: projectId
      in: path
      description: ID of the associated project
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: peeringId
      in: path
      description: ID of the peering
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
  get:
    description: Get a VPC Peering
    tags:
      - network
    summary: Get a VPC Peering
    operationId: getVpcPeering
    responses:
      '200':
        $ref: '../responses/_index.yaml#/VpcPeeringResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
  delete:
    description: Delete VPC Peering
    tags:
      - network
    summary: Delete VPC Peering
    operationId: deleteVpcPeering
    responses:
      '200':
        description: Successfully submitted delete peering request
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/public/accounts/{accountId}/projects/{projectId}/network/vpcs':
  parameters:
    - name: accountId
      in: path
      description: ID of the associated account
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: projectId
      in: path
      description: ID of the associated project
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
  post:
    description: Create a dedicated VPC
    tags:
      - network
    summary: Create a dedicated VPC for your DB clusters
    operationId: createVpc
    requestBody:
      $ref: '../request_bodies/_index.yaml#/SingleTenantVpcRequest'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/SingleTenantVpcResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
  get:
    description: List customer VPCs
    tags:
      - network
    summary: Get customer-facing VPCs to choose for cluster isolation
    operationId: listSingleTenantVpcs
    parameters:
      - name: order
        in: query
        description: Order of results
        required: false
        style: form
        explode: false
        schema:
          type: string
          default: asc
      - name: order_by
        in: query
        description: Sort results by attribute
        required: false
        style: form
        explode: false
        schema:
          type: string
          default: name
      - name: limit
        in: query
        description: Limit number of results returned per page
        required: false
        style: form
        explode: false
        schema:
          type: integer
          default: 25
          minimum: 1
          maximum: 100
      - name: continuation_token
        in: query
        description: Boundary before next page
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: name
        in: query
        description: Filter results by name
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: cloud
        in: query
        description: Filter results by cloud
        required: false
        style: form
        explode: false
        schema:
          type: string
          enum: ["AWS", "GCP"]
      - name: region
        in: query
        description: Filter results by region
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ids
        in: query
        description: Filter VPCs by Id
        style: form
        explode: false
        schema:
          type: array
          uniqueItems: true
          items:
            type: string
            format: uuid
    responses:
      '200':
        $ref: '../responses/_index.yaml#/SingleTenantVpcListResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/private/network/{vpcId}':
  get:
    description: Get network info by ID
    tags:
      - internal-network
    summary: Get network info by ID
    operationId: getVpc
    parameters:
      - name: vpcId
        in: path
        description: ID of platform to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    responses:
      '200':
        $ref: '../responses/_index.yaml#/NetworkResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/public/networks/{cloud}/restricted':
  get:
    operationId: getRestrictedCidrs
    description: Get list of unavailable CIDRs
    summary: Get list of unavailable CIDRs
    tags:
      - network-resources
    parameters:
      - name: cloud
        in: path
        description: The choice of deployment cloud
        required: true
        style: simple
        explode: false
        schema:
          type: string
    responses:
      '200':
        $ref: '../responses/_index.yaml#/CidrListResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/public/accounts/{accountId}/projects':
  get:
    description: List projects
    tags:
      - project
    summary: List projects
    operationId: listProjects
    parameters:
      - name: accountId
        in: path
        description: ID of the account
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: name
        in: query
        description: Filter projects by name
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: order
        in: query
        description: Order of results
        required: false
        style: form
        explode: false
        schema:
          type: string
          default: asc
      - name: order_by
        in: query
        description: Sort results by attribute
        required: false
        style: form
        explode: false
        schema:
          type: string
          default: name
      - name: limit
        in: query
        description: Limit number of results returned per page
        required: false
        style: form
        explode: false
        schema:
          type: integer
          default: 25
          minimum: 1
          maximum: 100
      - name: continuation_token
        in: query
        description: Boundary before next page
        required: false
        style: form
        explode: false
        schema:
          type: string
    responses:
      '200':
        $ref: '../responses/_index.yaml#/ProjectListResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
  post:
    description: Create a project
    tags:
      - project
    summary: Create a project
    operationId: createProject
    parameters:
      - name: accountId
        in: path
        description: ID of account to add the project to
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    requestBody:
      $ref: '../request_bodies/_index.yaml#/CreateProjectRequest'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/ProjectResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
  parameters:
    - schema:
        type: string
      name: accountId
      in: path
      required: true
'/public/accounts/{accountId}/projects/{projectId}':
  get:
    description: Get a project
    tags:
      - project
    summary: Get project info
    operationId: getProject
    parameters:
      - name: accountId
        in: path
        description: ID of the associated account
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: projectId
        in: path
        description: ID of project to get
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    responses:
      '200':
        $ref: '../responses/_index.yaml#/ProjectResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
  parameters:
    - schema:
        type: string
      name: accountId
      in: path
      required: true
    - schema:
        type: string
      name: projectId
      in: path
      required: true
  delete:
    description: Delete a project
    tags:
      - project
    summary: Delete project
    operationId: deleteProject
    parameters:
      - name: accountId
        in: path
        description: ID of the associated account
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: projectId
        in: path
        description: ID of project to get
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    responses:
      '200':
        description: Project successfully deleted
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/public/accounts/{accountId}/projects/{projectId}/clusters/{clusterId}/read_replicas':
  parameters:
    - name: accountId
      in: path
      description: ID of the associated account
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: projectId
      in: path
      description: ID of the associated project
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: clusterId
      in: path
      description: ID of the cluster
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
  get:
    description: List Read Replicas
    tags:
      - read-replica
    summary: List Read Replicas
    operationId: listReadReplicas
    parameters:
      - name: region
        in: query
        description: region for which to fetch read replica
        required: false
        style: form
        explode: false
        schema:
          type: string
    responses:
      '200':
        $ref: '../responses/_index.yaml#/ReadReplicaListResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
  post:
    description: Create Read Replica
    tags:
      - read-replica
    summary: Create Read Replica
    operationId: createReadReplica
    requestBody:
      $ref: '../request_bodies/_index.yaml#/ReadReplicaSpec'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/ReadReplicaResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/public/accounts/{accountId}/projects/{projectId}/clusters/{clusterId}/read_replica/{readReplicaId}':
  parameters:
    - name: accountId
      in: path
      description: ID of the associated account
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: projectId
      in: path
      description: ID of the associated project
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: clusterId
      in: path
      description: ID of the cluster
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: readReplicaId
      in: path
      description: ID of the read replica
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
  get:
    description: Get Read Replica
    tags:
      - read-replica
    summary: Get Read Replicas
    operationId: getReadReplica
    responses:
      '200':
        $ref: '../responses/_index.yaml#/ReadReplicaResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/public/accounts/{accountId}/software/tracks:
  parameters:
    - name: accountId
      in: path
      description: Account ID
      style: simple
      required: true
      explode: false
      schema:
        type: string
        format: uuid
  get:
    description: List all release tracks linked to account
    operationId: listTracksForAccount
    summary: List all release tracks linked to account
    tags:
      - software-release
    responses:
      '200':
        $ref: '../responses/_index.yaml#/SoftwareReleaseTrackListResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/public/accounts/{accountId}/software/tracks/{trackId}:
  parameters:
    - name: accountId
      in: path
      description: Account ID
      style: simple
      required: true
      explode: false
      schema:
        type: string
        format: uuid
    - name: trackId
      in: path
      description: Track ID
      style: simple
      required: true
      explode: false
      schema:
        type: string
        format: uuid
  get:
    description: Get release track by ID
    operationId: getTrackById
    summary: Get release track by ID
    tags:
      - software-release
    responses:
      '200':
        $ref: '../responses/_index.yaml#/SoftwareReleaseTrackResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/public/accounts/{accountId}/software/tracks/{trackId}/releases:
  get:
    description: List DB software releases by track
    operationId: listReleases
    summary: List DB software releases by track
    tags:
      - software-release
    parameters:
      - name: accountId
        in: path
        description: ID of Account
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: trackId
        in: path
        description: ID of the associated DB SW track
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: limit
        in: query
        description: Limit number of results returned per page
        required: false
        style: form
        explode: false
        schema:
          type: integer
          default: 25
          minimum: 1
          maximum: 100
      - name: continuation_token
        in: query
        description: Boundary before next page
        required: false
        style: form
        explode: false
        schema:
          type: string
    responses:
      '200':
        $ref: '../responses/_index.yaml#/SoftwareReleaseListResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/public/accounts/{accountId}/software/tracks/{trackId}/releases/{releaseId}:
  get:
    description: Get Software Release by ID
    operationId: getRelease
    summary: Get Software Release by Id
    tags:
      - software-release
    parameters:
      - name: accountId
        in: path
        description: ID of Account
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: trackId
        in: path
        description: ID of Track
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: releaseId
        in: path
        description: ID of release
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    responses:
      '200':
        $ref: '../responses/_index.yaml#/SoftwareReleaseResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/public/accounts/{accountId}/tasks':
  parameters:
    - name: accountId
      in: path
      description: ID of the associated account
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
  get:
    summary: List tasks
    description: List tasks
    operationId: listTasks
    tags:
      - task
    parameters:
      - name: projectId
        in: query
        description: ID of the associated project
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: uuid
      - name: entity_id
        in: query
        description: ID of the queried entity
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: uuid
      - name: entity_type
        in: query
        description: Type of entity to look for
        required: false
        style: form
        explode: false
        schema:
          type: string
          enum: [BACKUP, CLUSTER, CLUSTER_ALLOW_LIST, PROJECT]
      - name: task_type
        in: query
        description: Type of task to look for
        required: false
        style: form
        explode: false
        schema:
          type: string
          enum: [CREATE_CLUSTER, EDIT_CLUSTER, DELETE_CLUSTER, EDIT_ALLOW_LIST, CREATE_BACKUP, RESTORE_BACKUP, DELETE_PROJECT, UPGRADE_CLUSTER, PAUSE_CLUSTER, RESUME_CLUSTER]
      - name: locking
        in: query
        description: Get locking tasks
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: order
        in: query
        description: Order of results
        required: false
        style: form
        explode: false
        schema:
          type: string
          default: desc
      - name: order_by
        in: query
        description: Sort results by attribute
        required: false
        style: form
        explode: false
        schema:
          type: string
          default: created_on
      - name: limit
        in: query
        description: Limit number of results returned per page
        required: false
        style: form
        explode: false
        schema:
          type: integer
          default: 25
          minimum: 1
          maximum: 100
      - name: continuation_token
        in: query
        description: Boundary before next page
        required: false
        style: form
        explode: false
        schema:
          type: string
    responses:
      '200':
        $ref: '../responses/_index.yaml#/TaskListResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/public/ui/app_config:
  get:
    description: Get application configuration for a given set of paths
    operationId: getAppConfig
    summary: Get application configuration
    tags:
      - ui
    parameters:
      - name: scopeType
        in: query
        description: Get app config for scope with type
        required: true
        style: form
        explode: false
        schema:
          type: string
          enum: [GLOBAL, ACCOUNT]
      - name: scopeId
        in: query
        description: Get app config for scope with id
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: uuid
      - name: paths
        in: query
        description: Get app config for paths
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
    responses:
      '200':
        $ref: '../responses/_index.yaml#/AppConfigResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/public/ui/accounts/{accountId}/users/{userId}/tutorials:
  get:
    description: Get tutorials for a user
    operationId: getUserTutorials
    summary: Get tutorials for a user
    tags:
      - ui
    parameters:
      - name: accountId
        in: path
        description: ID of the associated account
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: userId
        in: path
        description: ID of the associated user
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    responses:
      '200':
        $ref: '../responses/_index.yaml#/UserTutorialListResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/public/ui/accounts/{accountId}/users/{userId}/tutorials/{tutorialId}:
  put:
    description: Update tutorial for a user
    operationId: updateUserTutorial
    summary: Update tutorial for a user
    tags:
      - ui
    parameters:
      - name: accountId
        in: path
        description: ID of the associated account
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: userId
        in: path
        description: ID of the associated user
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: tutorialId
        in: path
        description: Id of the associated tutorial
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    requestBody:
      $ref: '../request_bodies/_index.yaml#/UserTutorialRequestSpec'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/UserTutorialResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/public/ui/accounts/{accountId}/users/{userId}/tutorials/{tutorialId}/state/{stateId}/{is_completed}:
  put:
    description: Update tutorial state status for a user
    operationId: updateUserTutorialState
    summary: Update tutorial state status for a user
    tags:
      - ui
    parameters:
      - name: accountId
        in: path
        description: ID of the associated account
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: userId
        in: path
        description: ID of the associated user
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: tutorialId
        in: path
        description: Id of the associated tutorial
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: stateId
        in: path
        description: Id of the associated tutorial state
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: is_completed
        in: path
        description: Completion status to set the tutorial state to
        required: true
        style: simple
        explode: false
        schema:
          type: boolean
          nullable: false
    responses:
      '200':
        $ref: '../responses/_index.yaml#/UserTutorialResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/public/ui/accounts/{accountId}/users/{userId}/tutorials/{tutorialId}/enabled:
  put:
    description: Update whether tutorial is enabled for a user
    operationId: updateUserTutorialEnabled
    summary: Update whether tutorial is enabled for a user
    tags:
      - ui
    parameters:
      - name: accountId
        in: path
        description: ID of the associated account
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: userId
        in: path
        description: ID of the associated user
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: tutorialId
        in: path
        description: Id of the associated tutorial
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    responses:
      '200':
        description: Successfully updated user tutorial
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/public/ui/callback/sso_signup:
  get:
    description: Callback for SSO signup
    tags:
      - ui
    summary: Callback for SSO signup
    operationId: ssoSignupCallback
    parameters:
      - name: sso_type
        in: query
        description: SSO type associated with the callback
        style: form
        explode: false
        schema:
          type: string
          enum:
            - GOOGLE
            - GITHUB
            - LINKEDIN
        required: true
      - name: code
        in: query
        description: Authorization code returned by SSO provider
        style: form
        explode: false
        schema:
          type: string
      - name: country_code
        in: query
        description: Two letter country code as defined in ISO 3166
        style: form
        explode: false
        schema:
          type: string
          minLength: 2
          maxLength: 2
          pattern: ^[A-Z][A-Z]$
      - name: marketing_consent
        in: query
        description: Marketing consent of the user
        style: form
        explode: false
        schema:
          type: boolean
          default: false
    responses:
      '200':
        $ref: '../responses/_index.yaml#/LoginResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/public/ui/sso_redirect_url:
  get:
    description: Retrieve redirect URL for Single Sign On using external authentication.
    tags:
      - ui
    summary: Retrieve redirect URL for Single Sign On using external authentication.
    operationId: getSsoRedirectUrl
    parameters:
      - name: sso_type
        in: query
        description: The social provider used for SSO.
        required: true
        style: form
        explode: false
        schema:
          type: string
          enum:
            - GOOGLE
            - GITHUB
            - LINKEDIN
      - name: sso_event_type
        in: query
        description: The event initiating the SSO.
        required: true
        style: form
        explode: false
        schema:
          type: string
          enum:
            - SIGNUP
            - LOGIN
            - INVITE
    responses:
      '200':
        $ref: '../responses/_index.yaml#/SSORedirectURLResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/public/ui/callback/sso_login:
  get:
    description: Callback for SSO login
    tags:
      - ui
    summary: Callback for SSO login
    operationId: ssoLoginCallback
    parameters:
      - name: sso_type
        in: query
        description: SSO type associated with the callback
        style: form
        explode: false
        schema:
          type: string
          enum:
            - GOOGLE
            - GITHUB
            - LINKEDIN
        required: true
      - name: code
        in: query
        description: Authorization code returned by SSO provider
        style: form
        explode: false
        schema:
          type: string
    responses:
      '200':
        $ref: '../responses/_index.yaml#/LoginResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/public/ui/callback/sso_invite:
  get:
    description: Callback for SSO invite
    tags:
      - ui
    summary: Callback for SSO invite
    operationId: ssoInviteCallback
    parameters:
      - name: sso_type
        in: query
        description: SSO type associated with the callback
        style: form
        explode: false
        schema:
          type: string
          enum:
            - GOOGLE
            - GITHUB
            - LINKEDIN
        required: true
      - name: code
        in: query
        description: Authorization code returned by SSO provider
        style: form
        explode: false
        schema:
          type: string
      - name: country_code
        in: query
        description: Two letter country code as defined in ISO 3166
        style: form
        explode: false
        schema:
          type: string
          minLength: 2
          maxLength: 2
          pattern: ^[A-Z][A-Z]$
      - name: marketing_consent
        in: query
        description: Marketing consent of the user
        style: form
        explode: false
        schema:
          type: boolean
          default: false
    responses:
      '200':
        $ref: '../responses/_index.yaml#/LoginResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/public/users:
  post:
    description: Create a user
    tags:
      - user
    summary: Create a user
    operationId: createUser
    requestBody:
      $ref: '../request_bodies/_index.yaml#/CreateUserRequest'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/UserResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/public/users/self:
  get:
    description: Get info for current user
    tags:
      - user
    summary: Get user info
    operationId: getUser
    responses:
      '200':
        $ref: '../responses/_index.yaml#/UserResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
  put:
    description: Modify user info
    tags:
      - user
    summary: Modify user info
    operationId: modifyUser
    requestBody:
      $ref: '../request_bodies/_index.yaml#/UserSpec'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/UserResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
  delete:
    description: Delete current user
    tags:
      - user
    summary: Delete user
    operationId: deleteUser
    responses:
      '200':
        description: User successfully deleted
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/public/users/self/password:
  put:
    description: Change user password
    tags:
      - user
    summary: Change user password
    operationId: changePassword
    requestBody:
      $ref: '../request_bodies/_index.yaml#/ChangePasswordRequest'
    responses:
      '200':
        description: Successfully updated password
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
/public/users/self/accounts:
  get:
    description: Get a list of accounts associated with the current user
    tags:
      - user
    summary: Get account information for the user
    operationId: listUserAccounts
    responses:
      '200':
        $ref: '../responses/_index.yaml#/UserAccountListResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
