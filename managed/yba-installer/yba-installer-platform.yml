services:

  - name: platformOldConfig
    fileName: /opt/yugabyte/platform.conf
    contents: |
      include classpath("application.common.conf")

      play.crypto.secret={{ .PlatformOldConfAppSecret }}

      play.i18n.langs = [ "en" ]
      pidfile.path = "/dev/null"
      db {
        default.url="jdbc:postgresql://127.0.0.1:5432/yugaware"
        default.driver=org.postgresql.Driver
        default.username={{ .PlatformOldConfDbUser }}
        default.password={{ .PlatformOldConfDbPassword }}
        default.logStatements=true
        default.migration.initOnMigrate=true
        default.migration.auto=true
      }
      ebean {
        default = ["com.yugabyte.yw.models.*"]
      }

      play.evolutions.enabled=false
      play.modules.enabled += "org.flywaydb.play.PlayModule"

      yb {
        devops.home = {{ .PlatformOldConfDevopsHome }}
        swamper.targetPath = {{ .PlatformOldConfSwamperTargetPath }}
        metrics.url = {{ .PlatformOldConfMetricsUrl }}
        storage.path = /opt/yugabyte/data
        seedData = false
        multiTenant = false
        releases.path = "/opt/yugabyte/releases"
        thirdparty.packagePath = /opt/yugabyte/third-party

        # Interval at which to check the status of every universe. Default: 5 minutes.
        health.check_interval_ms = 300000
        # Interval at which to send a status report email. Default: 12 hours.
        health.status_interval_ms = 43200000
        # If SSO needs to be enabled on the platform.
        security.use_oauth = false
        security.use_oauth = {{ .PlatformOldConfUseOauth }}
        security.type = ""
        # Override in case SECURITY_TYPE is set.
        security.type = {{ .PlatformOldConfYbSecurityType }}
        security.clientID = ""
        security.clientID = {{ .PlatformOldConfYbOidcClientId }}
        security.secret = ""
        security.secret = {{ .PlatformOldConfYbOidcSecret }}
        security.discoveryURI = ""
        security.discoveryURI = {{ .PlatformOldConfYbOidcDiscoveryUri }}
        security.oidcScope = ""
        security.oidcScope = {{ .PlatformOldConfYbOidcScope }}
        security.oidcEmailAttribute = ""
        security.oidcEmailAttribute = {{ .PlatformOldConfYbOidcEmailAttr }}
        taskGC.gc_check_interval = 1 day
        taskGC.task_retention_duration = 30 days
        # The IP of the platform.
        url = ""
        url = {{ .PlatformOldConfYwUrl }}
      }

      play.filters {
        # CSRF config
        csrf {
          cookie {
            # If non null, the CSRF token will be placed in a cookie with this name
            name = "csrfCookie"
            # Whether the cookie should be set to secure
            secure = false
            # Whether the cookie should have the HTTP only flag set
            httpOnly = false
          }
          # Whether to bypass CSRF check if CORS check is satisfied
          bypassCorsTrustedOrigins = false
          header {
            # The name of the header to accept CSRF tokens from.
            name = "Csrf-Token"
          }
        }
        cors {
          pathPrefixes = ["/"]
          allowedOrigins =  [{{ .PlatformOldConfCorsOrigin }}]
          supportsCredentials=true
          allowedHttpMethods = ["GET", "POST", "PUT", "OPTIONS", "DELETE"]
          allowedHttpHeaders = [
            "Accept",
            "Origin",
            "Content-Type",
            "X-Auth-Token",
            "X-AUTH-YW-API-TOKEN",
            ${play.filters.csrf.header.name}
          ]
        }
      }

  - name: platformNewConfig
    fileName: /opt/yugabyte/platform.conf
    contents: |
      include classpath("application.yugabundle.conf")

  - name: platformOldService
    fileName: /etc/systemd/system/yb-platform.service
    contents: |
      [Unit]
      Description=Yugabyte Platform
      Wants=network-online.target
      After=network-online.target

      [Service]
      User=yugabyte
      Group=yugabyte
      Type=simple

      Environment="PLATFORM_APP_SECRET={{ .PlatformOldServiceAppSecret }}"
      Environment="CORS_ORIGIN={{ .PlatformOldServiceCorsOrigin }}"
      Environment="DEVOPS_HOME=/opt/yugabyte/devops"
      Environment="METRICS_URL=http://127.0.0.1:9090/api/v1"
      Environment="SWAMPER_TARGET_PATH=/opt/yugabyte/swamper_targets"
      Environment="PLATFORM_DB_USER=postgres"
      Environment="PLATFORM_DB_PASSWORD="
      Environment="USE_OAUTH={{ .PlatformOldServiceUseOauth }}"
      Environment="YB_SECURITY_TYPE={{ .PlatformOldServiceYbSecurityType }}"
      Environment="YB_OIDC_CLIENT_ID={{ .PlatformOldServiceYbOidcClientId }}"
      Environment="YB_OIDC_SECRET={{ .PlatformOldServiceYbOidcSecret }}"
      Environment="YB_OIDC_DISCOVERY_URI={{ .PlatformOldServiceYbOidcDiscoveryUri }}"
      Environment="YW_URL={{ .PlatformOldServiceYwUrl }}"
      Environment="YB_OIDC_SCOPE={{ .PlatformOldServiceYbOidcScope }}"
      Environment="YB_OIDC_EMAIL_ATTR={{ .PlatformOldServiceYbOidcEmailAttr }}"

      ExecStart=/opt/yugabyte/yugaware/bin/yugaware -Dconfig.file=/opt/yugabyte/platform.conf

      [Install]
      WantedBy=multi-user.target

  - name: platformNewService
    fileName: /etc/systemd/system/yb-platform.service
    contents: |
      [Unit]
      Description=Yugabyte Platform
      Wants=network-online.target
      After=network-online.target

      [Service]
      User=yugabyte
      Group=yugabyte
      Type=simple

      Environment="PLATFORM_APP_SECRET={{ .PlatformNewServiceAppSecret }}"
      Environment="CORS_ORIGIN={{ .PlatformNewServiceCorsOrigin }}"
      Environment="DEVOPS_HOME=/opt/yugabyte/devops"
      Environment="METRICS_URL=http://127.0.0.1:9090/api/v1"
      Environment="METRICS_MANAGEMENT_URL=http://127.0.0.1:9090/-"
      Environment="SWAMPER_TARGET_PATH=/opt/yugabyte/swamper_targets"
      Environment="SWAMPER_RULES_PATH=/opt/yugabyte/swamper_rules"
      Environment="PLATFORM_DB_USER=postgres"
      Environment="PLATFORM_DB_PASSWORD="
      Environment="USE_OAUTH={{ .PlatformNewServiceUseOauth }}"
      Environment="YB_SECURITY_TYPE={{ .PlatformNewServiceYbSecurityType }}"
      Environment="YB_OIDC_CLIENT_ID={{ .PlatformNewServiceYbOidcClientId }}"
      Environment="YB_OIDC_SECRET={{ .PlatformNewServiceYbOidcSecret }}"
      Environment="YB_OIDC_DISCOVERY_URI={{ .PlatformNewServiceYbOidcDiscoveryUri }}"
      Environment="YW_URL={{ .PlatformNewServiceYwUrl }}"
      Environment="YB_OIDC_SCOPE={{ .PlatformNewServiceYbOidcScope }}"
      Environment="YB_OIDC_EMAIL_ATTR={{ .PlatformNewServiceYbOidcEmailAttr }}"

      ExecStart=/opt/yugabyte/yugaware/bin/yugaware -Dconfig.file=/opt/yugabyte/platform.conf

      [Install]
      WantedBy=multi-user.target
