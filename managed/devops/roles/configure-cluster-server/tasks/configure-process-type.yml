
- name: Setup | Create config directory for {{ yb_process_type }}
  file:
    path: "{{ yb_conf_dir }}"
    state: directory
    mode: 0755
    owner: "{{ user_name }}"
    group: "{{ user_name }}"
  tags: yb-prebuilt-ami

- set_fact:
    _mount_points: "{{ mount_points.split(',') }}"
  when: _mount_points is not defined
  tags: always

- set_fact:
    _mount_logs_dir: "{{ _mount_points[0] }}/yb-data/{{ yb_process_type }}/logs"
  tags: always

- name: Setup | Create {{ yb_process_type }} logs directory
  file:
    path: "{{ _mount_logs_dir }}"
    state: directory
    mode: 0755
    owner: "{{ user_name }}"
    group: "{{ user_name }}"

- name: Setup | Symlink {{ yb_process_type }} logs directory
  file:
    src: "{{ _mount_logs_dir }}"
    dest: "{{ yb_logs_dir }}"
    mode: 0755
    owner: "{{ user_name }}"
    group: "{{ user_name }}"
    state: link
    force: yes
  tags: yb-prebuilt-ami

# Remove existing gflags present in conf file
- name: Configure | Remove {{ yb_process_type }} gflags
  file:
    path: "{{ yb_conf_file }}"
    state: absent
  tags:
    - override_gflags

# Set the gflags in conf file
# gflags has greater precedence over extra_gflags
- name: Configure | Set {{ yb_process_type }} gflags
  lineinfile:
    dest: "{{ yb_conf_file }}"
    regexp: "^--{{ item.key }}=(.*)"
    line: "--{{item.key}}={{item.value}}"
    create: yes
  with_dict: "{{ extra_gflags | combine(gflags | default({})) }}"
  tags:
    - override_gflags

# Cronjob approach for starting yb-master and yb-tserver
- name: Setup cron to check liveness of {{ yb_process_type }}
  cron:
    name: "Check liveness of {{ yb_process_type }}"
    minute: "*/1"
    user: "{{ user_name }}"
    job: >
      {{ yb_bin_dir }}/yb-server-ctl.sh {{ yb_process_type }} cron-check ||
      {{ yb_bin_dir }}/yb-server-ctl.sh {{ yb_process_type }} start
  register: cron_result
  failed_when:
    - cron_result is failed
    - cloud_type != "onprem"
  when: not systemd_option
  tags: yb-prebuilt-ami

- block:
  # Remove old cron jobs and its tasks that start master and tserver
  - name: Remove old cron job that starts master (for upgrades)
    cron:
      name: "Check liveness of master"
      user: "yugabyte"
      state: absent

  - name: Remove old cron job that starts tserver (for upgrades)
    cron:
      name: "Check liveness of tserver"
      user: "yugabyte"
      state: absent

  - name: Determine system or user scope
    stat:
      path: /etc/systemd/system/yb-{{ yb_process_type }}.service
    register: systemd_system

  - name: User mode systemd
    block:
    - name: Stop existing running {{ yb_process_type }}
      systemd:
        name: yb-{{ yb_process_type }}
        state: stopped
        enabled: no
        scope: user

    - name: Reload systemd user daemon
      systemd:
        daemon_reload: yes
        scope: user

    # User units need to be linked if waiting on system units
    - name: Link network-online.target
      shell:
        cmd: "systemctl --user link /lib/systemd/system/network-online.target"

    - name: Start network-online.target
      systemd:
        name: network-online.target
        state: started
        enabled: yes
        scope: user

    - name: Enable and start {{ yb_process_type }}
      systemd:
        name: yb-{{ yb_process_type }}
        state: started
        enabled: yes
        scope: user
    when: not systemd_system.stat.exists

  - name: System (RHEL7) systemd units
    block:
    - name: Stop existing running {{ yb_process_type }}
      shell:
        cmd: "sudo systemctl stop yb-{{ yb_process_type }}"

    - name: Stop existing running {{ yb_process_type }}
      shell:
        cmd: "sudo systemctl disable yb-{{ yb_process_type }}"

    # Systemd daemon-reload for yb-master and yb-tserver service files
    - name: Perform daemon-reload for the new services
      shell:
        cmd: "sudo systemctl daemon-reload"

    - name: Enable {{ yb_process_type }}
      shell:
        cmd: "sudo systemctl enable yb-{{ yb_process_type }}"

    - name: Start {{ yb_process_type }}
      shell:
        cmd: "sudo systemctl start yb-{{ yb_process_type }}"
    when: systemd_system.stat.exists

  tags:
    - override_gflags
    - systemd_upgrade
  when: systemd_option
